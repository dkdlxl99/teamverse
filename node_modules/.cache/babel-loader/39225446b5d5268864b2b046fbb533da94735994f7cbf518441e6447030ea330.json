{"ast":null,"code":"var _jsxFileName = \"/Users/woo/Documents/git_local/react/0206/src/pages/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Sidebar from \"../components/Sidebar\";\nimport GanttChart from \"../components/GanttChart\";\nimport Chatbox from \"../components/Chatbox\";\nimport Dashboard from \"../components/Dashboard\";\nimport TaskBoard from \"../components/TaskBoard\";\nimport \"../styles/MainPage.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [projectName, setProjectName] = useState(\"\");\n  const [user, setUser] = useState(null);\n\n  // 🔹 로그인한 유저 정보 가져오기\n  const fetchUserInfo = async () => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) return;\n    try {\n      const response = await axios.get(\"http://localhost:8082/api/auth/me\", {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(\"✅ 로그인한 사용자 정보:\", response.data);\n      setUser(response.data);\n      localStorage.setItem(\"user\", JSON.stringify(response.data));\n    } catch (error) {\n      console.error(\"❌ 사용자 정보 불러오기 실패:\", error);\n    }\n  };\n\n  // 🔹 로그인한 유저의 프로젝트 불러오기\n  const fetchProjects = async () => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) return;\n    try {\n      const response = await axios.get(\"http://localhost:8082/api/user/projects\", {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(\"✅ 로그인한 유저의 프로젝트 목록:\", response.data);\n      setProjects(response.data);\n      const savedProjectId = localStorage.getItem(\"selectedProjectId\");\n      if (savedProjectId) {\n        const foundProject = response.data.find(proj => proj.id === parseInt(savedProjectId));\n        if (foundProject) {\n          setSelectedProject(foundProject);\n        }\n      }\n    } catch (error) {\n      console.error(\"❌ 프로젝트 목록 불러오기 실패:\", error);\n    }\n  };\n\n  // ✅ 처음 렌더링될 때 유저 정보 및 프로젝트 가져오기\n  useEffect(() => {\n    fetchUserInfo();\n    fetchProjects();\n  }, []);\n  const handleCreateProject = async () => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      alert(\"로그인이 필요합니다.\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:8082/api/user/projects\", {\n        name: projectName,\n        startDate: new Date().toISOString().split(\"T\")[0]\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(\"✅ 프로젝트 생성 성공:\", response.data);\n      setProjects([...projects, response.data]);\n      setSelectedProject(response.data);\n      localStorage.setItem(\"selectedProjectId\", response.data.id);\n      setShowModal(false);\n    } catch (error) {\n      console.error(\"❌ 프로젝트 생성 실패:\", error);\n      alert(\"프로젝트 생성에 실패했습니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [projects.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-gantt\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uD604\\uC7AC \\uD504\\uB85C\\uC81D\\uD2B8\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"create-project-btn\",\n          onClick: () => setShowModal(true),\n          children: \"\\uC0C8\\uB85C\\uC6B4 \\uD504\\uB85C\\uC81D\\uD2B8 \\uC0DD\\uC131\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(GanttChart, {\n        project: projects[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TaskBoard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dashboard, {\n        tasks: []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbox-container\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Chatbox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uC0C8 \\uD504\\uB85C\\uC81D\\uD2B8 \\uC0DD\\uC131\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uD504\\uB85C\\uC81D\\uD2B8 \\uC774\\uB984\",\n          value: projectName,\n          onChange: e => setProjectName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreateProject,\n          children: \"\\uC0DD\\uC131\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowModal(false),\n          children: \"\\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n_s(MainPage, \"0fFcQhcuAEkUHs+lUlMtUDtFvn8=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","GanttChart","Chatbox","Dashboard","TaskBoard","axios","jsxDEV","_jsxDEV","MainPage","_s","projects","setProjects","selectedProject","setSelectedProject","showModal","setShowModal","projectName","setProjectName","user","setUser","fetchUserInfo","token","localStorage","getItem","response","get","headers","Authorization","console","log","data","setItem","JSON","stringify","error","fetchProjects","savedProjectId","foundProject","find","proj","id","parseInt","handleCreateProject","alert","post","name","startDate","Date","toISOString","split","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","onClick","project","tasks","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/woo/Documents/git_local/react/0206/src/pages/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Sidebar from \"../components/Sidebar\";\nimport GanttChart from \"../components/GanttChart\";\nimport Chatbox from \"../components/Chatbox\";\nimport Dashboard from \"../components/Dashboard\";\nimport TaskBoard from \"../components/TaskBoard\";\nimport \"../styles/MainPage.css\";\nimport axios from \"axios\";\n\nconst MainPage = () => {\n    const [projects, setProjects] = useState([]);\n    const [selectedProject, setSelectedProject] = useState(null);\n    const [showModal, setShowModal] = useState(false);\n    const [projectName, setProjectName] = useState(\"\");\n    const [user, setUser] = useState(null);\n\n    // 🔹 로그인한 유저 정보 가져오기\n    const fetchUserInfo = async () => {\n        const token = localStorage.getItem(\"token\");\n        if (!token) return;\n\n        try {\n            const response = await axios.get(\"http://localhost:8082/api/auth/me\", {\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                    \"Content-Type\": \"application/json\",\n                },\n            });\n\n            console.log(\"✅ 로그인한 사용자 정보:\", response.data);\n            setUser(response.data);\n            localStorage.setItem(\"user\", JSON.stringify(response.data));\n        } catch (error) {\n            console.error(\"❌ 사용자 정보 불러오기 실패:\", error);\n        }\n    };\n\n    // 🔹 로그인한 유저의 프로젝트 불러오기\n    const fetchProjects = async () => {\n        const token = localStorage.getItem(\"token\");\n        if (!token) return;\n\n        try {\n            const response = await axios.get(\"http://localhost:8082/api/user/projects\", {\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                    \"Content-Type\": \"application/json\",\n                },\n            });\n\n            console.log(\"✅ 로그인한 유저의 프로젝트 목록:\", response.data);\n            setProjects(response.data);\n\n            const savedProjectId = localStorage.getItem(\"selectedProjectId\");\n            if (savedProjectId) {\n                const foundProject = response.data.find(proj => proj.id === parseInt(savedProjectId));\n                if (foundProject) {\n                    setSelectedProject(foundProject);\n                }\n            }\n        } catch (error) {\n            console.error(\"❌ 프로젝트 목록 불러오기 실패:\", error);\n        }\n    };\n\n    // ✅ 처음 렌더링될 때 유저 정보 및 프로젝트 가져오기\n    useEffect(() => {\n        fetchUserInfo();\n        fetchProjects();\n    }, []);\n\n    const handleCreateProject = async () => {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n            alert(\"로그인이 필요합니다.\");\n            return;\n        }\n\n        try {\n            const response = await axios.post(\n                \"http://localhost:8082/api/user/projects\",\n                { name: projectName, startDate: new Date().toISOString().split(\"T\")[0] },\n                {\n                    headers: {\n                        Authorization: `Bearer ${token}`,\n                        \"Content-Type\": \"application/json\",\n                    },\n                }\n            );\n\n            console.log(\"✅ 프로젝트 생성 성공:\", response.data);\n            setProjects([...projects, response.data]);\n            setSelectedProject(response.data);\n            localStorage.setItem(\"selectedProjectId\", response.data.id);\n            setShowModal(false);\n        } catch (error) {\n            console.error(\"❌ 프로젝트 생성 실패:\", error);\n            alert(\"프로젝트 생성에 실패했습니다.\");\n        }\n    };\n\n    return (\n        <div className=\"main-page\">\n            <div className=\"content\">\n            {projects.length === 0 ? (\n                    <div className=\"empty-gantt\">\n                        <p>현재 프로젝트가 없습니다.</p>\n                        <button className=\"create-project-btn\" onClick={() => setShowModal(true)}>\n                            새로운 프로젝트 생성\n                        </button>\n                    </div>\n                ) : (\n                    <GanttChart project={projects[0]} />\n                )}\n                <TaskBoard />\n                <Dashboard tasks={[]} />\n            </div>\n            <div className=\"chatbox-container\">\n                <Sidebar />\n                <Chatbox />\n            </div>\n\n            {/* 🔹 프로젝트 생성 모달 */}\n            {showModal && (\n                <div className=\"modal\">\n                    <div className=\"modal-content\">\n                        <h2>새 프로젝트 생성</h2>\n                        <input \n                            type=\"text\" \n                            placeholder=\"프로젝트 이름\" \n                            value={projectName}\n                            onChange={(e) => setProjectName(e.target.value)}\n                        />\n                        <button onClick={handleCreateProject}>생성</button>\n                        <button onClick={() => setShowModal(false)}>취소</button>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default MainPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}