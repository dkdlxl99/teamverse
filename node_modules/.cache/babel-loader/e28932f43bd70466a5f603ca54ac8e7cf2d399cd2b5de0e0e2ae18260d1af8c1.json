{"ast":null,"code":"var _jsxFileName = \"/Users/woo/Documents/git_local/react/0206/src/pages/TeamStatusPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport \"../styles/TeamStatusPage.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TeamStatusPage = () => {\n  _s();\n  const [showInviteModal, setShowInviteModal] = useState(false);\n  const [inviteEmail, setInviteEmail] = useState(\"\");\n  const handleInvite = async () => {\n    if (!inviteEmail.trim()) {\n      alert(\"초대할 사용자의 이메일을 입력하세요.\");\n      return;\n    }\n    try {\n      const token = localStorage.getItem(\"accessToken\"); // 🔹 JWT 토큰 가져오기\n      if (!token) {\n        alert(\"로그인이 필요합니다.\");\n        return;\n      }\n      const response = await axios.post(\"http://localhost:8082/api/team/invite\", {\n        email: inviteEmail\n      }, {\n        headers: {\n          \"Authorization\": `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.status === 200) {\n        alert(\"초대 요청이 성공적으로 전송되었습니다!\");\n        setShowInviteModal(false);\n        setInviteEmail(\"\"); // 입력 필드 초기화\n      } else {\n        alert(\"초대할 수 없는 사용자입니다.\");\n      }\n    } catch (error) {\n      console.error(\"초대 요청 실패:\", error);\n      alert(\"초대 요청을 보낼 수 없습니다.\");\n    }\n  };\n\n  // return (\n  //   <div className=\"team-status-page\">\n\n  //     <div className=\"content\">\n  //       <h1>Teams</h1>\n\n  //       {/* 검색 및 필터 */}\n  //       <div className=\"search-filter\">\n  //         <input\n  //           type=\"text\"\n  //           placeholder=\"Search\"\n  //           value={searchQuery}\n  //           onChange={(e) => setSearchQuery(e.target.value)}\n  //         />\n  //         <button className=\"invite-button\">Invite Member</button>\n  //       </div>\n\n  //       {/* 팀원 리스트 */}\n  //       <div className=\"team-list\">\n  //         <table>\n  //           <thead>\n  //             <tr>\n  //               <th>Status</th>\n  //               <th>Name</th>\n  //               <th>Company</th>\n  //               <th>Location</th>\n  //               <th>Timezone</th>\n  //             </tr>\n  //           </thead>\n  //           <tbody>\n  //             {filteredMembers.map((member) => (\n  //               <tr key={member.id} onClick={() => handleMemberClick(member)}>\n  //                 <td>\n  //                   <span\n  //                     className={`status-indicator ${\n  //                       member.status === \"In the flow\" ? \"online\" : \"offline\"\n  //                     }`}\n  //                   ></span>\n  //                 </td>\n  //                 <td>{member.name}</td>\n  //                 <td>{member.company}</td>\n  //                 <td>{member.location}</td>\n  //                 <td>{member.timezone}</td>\n  //               </tr>\n  //             ))}\n  //           </tbody>\n  //         </table>\n  //       </div>\n\n  //     </div>\n\n  //     {/* 프로필 상세 패널 */}\n  //     {selectedMember && (\n  //       <div className=\"profile-panel\">\n  //         <button className=\"close-btn\" onClick={closeProfile}>\n  //           &times;\n  //         </button>\n  //         <div className=\"profile-content\">\n  //           <img src={selectedMember.avatar} alt={selectedMember.name} />\n  //           <h2>{selectedMember.name}</h2>\n  //           <p>{selectedMember.location}</p>\n  //           <p><strong>Company:</strong> {selectedMember.company}</p>\n  //           <p><strong>Status:</strong> {selectedMember.status}</p>\n  //           <p><strong>Email:</strong> {selectedMember.email}</p>\n  //           <p><strong>Phone:</strong> {selectedMember.phone}</p>\n  //         </div>\n  //       </div>\n  //     )}\n  //   </div>\n  // );\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"team-status\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD300 \\uC0C1\\uD0DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"invite-button\",\n      onClick: () => setShowInviteModal(true),\n      children: \"\\uD300\\uC6D0 \\uCD08\\uB300\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), showInviteModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uCD08\\uB300\\uD560 \\uC0AC\\uC6A9\\uC790 \\uC774\\uBA54\\uC77C \\uC785\\uB825\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"\\uC0AC\\uC6A9\\uC790 \\uC774\\uBA54\\uC77C\",\n          value: inviteEmail,\n          onChange: e => setInviteEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleInvite,\n          children: \"\\uCD08\\uB300\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowInviteModal(false),\n          children: \"\\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(TeamStatusPage, \"nDCy6TYkK2XmcX4Sb/2BOoXb25A=\");\n_c = TeamStatusPage;\nexport default TeamStatusPage;\nvar _c;\n$RefreshReg$(_c, \"TeamStatusPage\");","map":{"version":3,"names":["React","useState","Navbar","axios","jsxDEV","_jsxDEV","TeamStatusPage","_s","showInviteModal","setShowInviteModal","inviteEmail","setInviteEmail","handleInvite","trim","alert","token","localStorage","getItem","response","post","email","headers","status","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/woo/Documents/git_local/react/0206/src/pages/TeamStatusPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport \"../styles/TeamStatusPage.css\";\nimport axios from \"axios\";\n\nconst TeamStatusPage = () => {\n  const [showInviteModal, setShowInviteModal] = useState(false);\n  const [inviteEmail, setInviteEmail] = useState(\"\");\n\n  const handleInvite = async () => {\n      if (!inviteEmail.trim()) {\n          alert(\"초대할 사용자의 이메일을 입력하세요.\");\n          return;\n      }\n\n      try {\n          const token = localStorage.getItem(\"accessToken\"); // 🔹 JWT 토큰 가져오기\n          if (!token) {\n              alert(\"로그인이 필요합니다.\");\n              return;\n          }\n\n          const response = await axios.post(\n              \"http://localhost:8082/api/team/invite\",\n              { email: inviteEmail },\n              {\n                  headers: {\n                      \"Authorization\": `Bearer ${token}`,\n                      \"Content-Type\": \"application/json\"\n                  }\n              }\n          );\n\n          if (response.status === 200) {\n              alert(\"초대 요청이 성공적으로 전송되었습니다!\");\n              setShowInviteModal(false);\n              setInviteEmail(\"\"); // 입력 필드 초기화\n          } else {\n              alert(\"초대할 수 없는 사용자입니다.\");\n          }\n      } catch (error) {\n          console.error(\"초대 요청 실패:\", error);\n          alert(\"초대 요청을 보낼 수 없습니다.\");\n      }\n  };\n\n\n\n  // return (\n  //   <div className=\"team-status-page\">\n\n  //     <div className=\"content\">\n  //       <h1>Teams</h1>\n\n  //       {/* 검색 및 필터 */}\n  //       <div className=\"search-filter\">\n  //         <input\n  //           type=\"text\"\n  //           placeholder=\"Search\"\n  //           value={searchQuery}\n  //           onChange={(e) => setSearchQuery(e.target.value)}\n  //         />\n  //         <button className=\"invite-button\">Invite Member</button>\n  //       </div>\n\n  //       {/* 팀원 리스트 */}\n  //       <div className=\"team-list\">\n  //         <table>\n  //           <thead>\n  //             <tr>\n  //               <th>Status</th>\n  //               <th>Name</th>\n  //               <th>Company</th>\n  //               <th>Location</th>\n  //               <th>Timezone</th>\n  //             </tr>\n  //           </thead>\n  //           <tbody>\n  //             {filteredMembers.map((member) => (\n  //               <tr key={member.id} onClick={() => handleMemberClick(member)}>\n  //                 <td>\n  //                   <span\n  //                     className={`status-indicator ${\n  //                       member.status === \"In the flow\" ? \"online\" : \"offline\"\n  //                     }`}\n  //                   ></span>\n  //                 </td>\n  //                 <td>{member.name}</td>\n  //                 <td>{member.company}</td>\n  //                 <td>{member.location}</td>\n  //                 <td>{member.timezone}</td>\n  //               </tr>\n  //             ))}\n  //           </tbody>\n  //         </table>\n  //       </div>\n\n        \n  //     </div>\n\n  //     {/* 프로필 상세 패널 */}\n  //     {selectedMember && (\n  //       <div className=\"profile-panel\">\n  //         <button className=\"close-btn\" onClick={closeProfile}>\n  //           &times;\n  //         </button>\n  //         <div className=\"profile-content\">\n  //           <img src={selectedMember.avatar} alt={selectedMember.name} />\n  //           <h2>{selectedMember.name}</h2>\n  //           <p>{selectedMember.location}</p>\n  //           <p><strong>Company:</strong> {selectedMember.company}</p>\n  //           <p><strong>Status:</strong> {selectedMember.status}</p>\n  //           <p><strong>Email:</strong> {selectedMember.email}</p>\n  //           <p><strong>Phone:</strong> {selectedMember.phone}</p>\n  //         </div>\n  //       </div>\n  //     )}\n  //   </div>\n  // );\n\n  return (\n    <div className=\"team-status\">\n        <h2>팀 상태</h2>\n        <button className=\"invite-button\" onClick={() => setShowInviteModal(true)}>\n            팀원 초대\n        </button>\n\n        {showInviteModal && (\n            <div className=\"modal\">\n                <div className=\"modal-content\">\n                    <h3>초대할 사용자 이메일 입력</h3>\n                    <input\n                        type=\"email\"\n                        placeholder=\"사용자 이메일\"\n                        value={inviteEmail}\n                        onChange={(e) => setInviteEmail(e.target.value)}\n                    />\n                    <button onClick={handleInvite}>초대하기</button>\n                    <button onClick={() => setShowInviteModal(false)}>취소</button>\n                </div>\n            </div>\n        )}\n    </div>\n);\n};\n\nexport default TeamStatusPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}