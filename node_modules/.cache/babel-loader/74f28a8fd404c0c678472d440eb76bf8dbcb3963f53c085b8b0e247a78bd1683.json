{"ast":null,"code":"var _jsxFileName = \"/Users/woo/Documents/git_local/react/0213/src/components/Chatbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { getAccessToken } from \"../utils/authUtils\";\nimport { getStompClient } from \"../api/websocket\";\nimport \"../styles/Chatbox.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbox = ({\n  projectId\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  // ✅ 채팅 메시지 불러오기 (초기 로딩 시)\n  const fetchChatMessages = async () => {\n    if (!projectId) return;\n    const token = getAccessToken();\n    try {\n      const response = await axios.get(`http://localhost:8082/api/chat/${projectId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessages(response.data); // ✅ 상태 업데이트\n      console.log(\"✅ 채팅 메시지 로드 성공:\", response.data);\n    } catch (error) {\n      console.error(\"❌ 채팅 기록 불러오기 실패:\", error);\n    }\n  };\n  useEffect(() => {\n    if (!projectId) return;\n    console.log(`🔄 Chatbox에서 감지된 프로젝트 ID: ${projectId}`);\n    fetchChatMessages();\n    const stompClient = getStompClient();\n    if (!stompClient.connected) stompClient.activate();\n\n    // ✅ WebSocket 구독 (새로운 메시지 수신)\n    const subscription = stompClient.subscribe(`/topic/chat/${projectId}`, message => {\n      const receivedMessage = JSON.parse(message.body);\n      console.log(\"📩 새 채팅 메시지 수신:\", receivedMessage);\n      setMessages(prevMessages => [...prevMessages, receivedMessage]);\n    });\n    return () => {\n      console.log(\"🛑 WebSocket 구독 해제:\", `/topic/chat/${projectId}`);\n      subscription.unsubscribe();\n    };\n  }, [projectId]);\n\n  // ✅ 메시지 전송\n  const sendMessage = async () => {\n    if (!newMessage.trim() || !projectId) return;\n    const userEmail = localStorage.getItem(\"email\") || sessionStorage.getItem(\"email\");\n    if (!userEmail) {\n      console.error(\"❌ 로그인한 사용자의 이메일을 찾을 수 없습니다!\");\n      return;\n    }\n    try {\n      const messageData = {\n        project: {\n          id: projectId\n        },\n        sender: {\n          email: userEmail\n        },\n        content: newMessage.trim()\n      };\n      const stompClient = getStompClient();\n      if (!stompClient.connected) {\n        console.error(\"🚨 WebSocket이 연결되지 않음!\");\n        return;\n      }\n      stompClient.publish({\n        destination: `/app/chat`,\n        body: JSON.stringify(messageData)\n      });\n      console.log(\"📤 메시지 전송:\", messageData);\n      setNewMessage(\"\");\n    } catch (error) {\n      console.error(\"❌ 메시지 전송 실패:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbox-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD300 \\uCC44\\uD305\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.length > 0 ? messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: msg.sender.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 28\n        }, this), \": \", msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83D\\uDCED \\uC544\\uC9C1 \\uBA54\\uC2DC\\uC9C0\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newMessage,\n      onChange: e => setNewMessage(e.target.value),\n      placeholder: \"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"\\uC804\\uC1A1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbox, \"bFuYpZWMfOU2WhBa/CyaGkj6fmk=\");\n_c = Chatbox;\nexport default Chatbox;\nvar _c;\n$RefreshReg$(_c, \"Chatbox\");","map":{"version":3,"names":["React","useState","useEffect","axios","getAccessToken","getStompClient","jsxDEV","_jsxDEV","Chatbox","projectId","_s","messages","setMessages","newMessage","setNewMessage","fetchChatMessages","token","response","get","headers","Authorization","data","console","log","error","stompClient","connected","activate","subscription","subscribe","message","receivedMessage","JSON","parse","body","prevMessages","unsubscribe","sendMessage","trim","userEmail","localStorage","getItem","sessionStorage","messageData","project","id","sender","email","content","publish","destination","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","msg","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/woo/Documents/git_local/react/0213/src/components/Chatbox.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { getAccessToken } from \"../utils/authUtils\";\nimport { getStompClient } from \"../api/websocket\";\nimport \"../styles/Chatbox.css\"; \n\nconst Chatbox = ({ projectId }) => {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  // ✅ 채팅 메시지 불러오기 (초기 로딩 시)\n  const fetchChatMessages = async () => {\n    if (!projectId) return;\n    const token = getAccessToken();\n    try {\n      const response = await axios.get(`http://localhost:8082/api/chat/${projectId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setMessages(response.data); // ✅ 상태 업데이트\n      console.log(\"✅ 채팅 메시지 로드 성공:\", response.data);\n    } catch (error) {\n      console.error(\"❌ 채팅 기록 불러오기 실패:\", error);\n    }\n  };\n\n  useEffect(() => {\n    if (!projectId) return;\n    console.log(`🔄 Chatbox에서 감지된 프로젝트 ID: ${projectId}`);\n    fetchChatMessages();\n\n    const stompClient = getStompClient();\n    if (!stompClient.connected) stompClient.activate();\n  \n    // ✅ WebSocket 구독 (새로운 메시지 수신)\n    const subscription = stompClient.subscribe(`/topic/chat/${projectId}`, (message) => {\n      const receivedMessage = JSON.parse(message.body);\n      console.log(\"📩 새 채팅 메시지 수신:\", receivedMessage);\n      setMessages((prevMessages) => [...prevMessages, receivedMessage]); \n    });\n\n    return () => {\n      console.log(\"🛑 WebSocket 구독 해제:\", `/topic/chat/${projectId}`);\n      subscription.unsubscribe();\n    };\n  }, [projectId]);\n\n  // ✅ 메시지 전송\n  const sendMessage = async () => {\n    if (!newMessage.trim() || !projectId) return;\n    const userEmail = localStorage.getItem(\"email\") || sessionStorage.getItem(\"email\");\n    if (!userEmail) {\n      console.error(\"❌ 로그인한 사용자의 이메일을 찾을 수 없습니다!\");\n      return;\n    }\n\n    try {\n      const messageData = {\n        project: { id: projectId },\n        sender: { email: userEmail },\n        content: newMessage.trim(),\n      };\n\n      const stompClient = getStompClient();\n      if (!stompClient.connected) {\n        console.error(\"🚨 WebSocket이 연결되지 않음!\");\n        return;\n      }\n\n      stompClient.publish({\n        destination: `/app/chat`,\n        body: JSON.stringify(messageData),\n      });\n\n      console.log(\"📤 메시지 전송:\", messageData);\n      setNewMessage(\"\");\n    } catch (error) {\n      console.error(\"❌ 메시지 전송 실패:\", error);\n    }\n  };\n\n  return (\n    <div className=\"chatbox-container\">\n      <h3>팀 채팅</h3>\n      <div className=\"messages\">\n        {messages.length > 0 ? (\n          messages.map((msg, index) => (\n            <p key={index}><strong>{msg.sender.email}</strong>: {msg.content}</p>\n          ))\n        ) : (\n          <p>📭 아직 메시지가 없습니다.</p>\n        )}\n      </div>\n      <input\n        type=\"text\"\n        value={newMessage}\n        onChange={(e) => setNewMessage(e.target.value)}\n        placeholder=\"메시지를 입력하세요...\"\n      />\n      <button onClick={sendMessage}>전송</button>\n    </div>\n  );\n};\n\nexport default Chatbox;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}