{"ast":null,"code":"var _jsxFileName = \"/Users/woo/Documents/git_local/react/0213/src/components/InviteList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { getAccessToken } from \"../utils/authUtils\";\nimport { Client } from \"@stomp/stompjs\";\nimport \"../styles/InviteList.css\"; // ✅ 스타일 적용\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InviteList = ({\n  refreshProjects\n}) => {\n  _s();\n  const [invites, setInvites] = useState([]);\n  const [notifications, setNotifications] = useState([]); // ✅ 팝업 알림 상태\n\n  useEffect(() => {\n    const fetchInvites = async () => {\n      const token = getAccessToken();\n      try {\n        const response = await axios.get(\"http://localhost:8082/api/team/invites\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"📌 받은 초대 목록:\", response.data);\n        setInvites(response.data);\n      } catch (error) {\n        console.error(\"❌ 초대 목록 불러오기 실패:\", error);\n      }\n    };\n    fetchInvites();\n\n    // ✅ WebSocket 연결 (토큰 포함)\n    const stompClient = new Client({\n      brokerURL: \"ws://localhost:8082/ws\",\n      // ✅ WebSocket 직접 사용\n      connectHeaders: {\n        Authorization: `Bearer ${getAccessToken()}` // ✅ WebSocket 요청에 인증 토큰 추가\n      },\n      debug: str => console.log(\"📌 STOMP Debug:\", str),\n      reconnectDelay: 5000,\n      heartbeatIncoming: 4000,\n      heartbeatOutgoing: 4000,\n      onConnect: () => {\n        console.log(\"✅ WebSocket 연결됨\");\n        stompClient.subscribe(\"/topic/invites\", message => {\n          const newInvite = JSON.parse(message.body);\n          console.log(\"📩 새로운 초대 알림:\", newInvite);\n          setNotifications(prev => [...prev, newInvite]); // ✅ 팝업 알림 추가\n          fetchInvites(); // ✅ 초대 목록 새로고침\n        });\n      },\n      onStompError: frame => {\n        console.error(\"🚨 STOMP ERROR:\", frame);\n      }\n    });\n    stompClient.activate();\n    return () => {\n      stompClient.deactivate();\n    };\n  }, []);\n\n  // ✅ 초대 수락 함수\n  const acceptInvite = async inviteId => {\n    const token = getAccessToken();\n    try {\n      await axios.post(`http://localhost:8082/api/team/invite/${inviteId}/accept`, null, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert(\"✅ 초대를 수락했습니다!\");\n      setInvites(prev => prev.filter(invite => invite.id !== inviteId));\n      refreshProjects(); // ✅ 초대 수락 후 프로젝트 목록 갱신\n\n      // ✅ 알림 제거 (3초 후 사라짐)\n      setTimeout(() => {\n        setNotifications(prev => prev.filter(notif => notif.id !== inviteId));\n      }, 3000);\n    } catch (error) {\n      console.error(\"❌ 초대 수락 실패:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invite-popup-container\",\n      children: notifications.map(invite => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invite-popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: invite.sender.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), \" \\uB2D8\\uC774 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: invite.project.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 60\n          }, this), \" \\uD504\\uB85C\\uC81D\\uD2B8\\uC5D0 \\uCD08\\uB300\\uD588\\uC2B5\\uB2C8\\uB2E4.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => acceptInvite(invite.id),\n          children: \"\\u2705 \\uC218\\uB77D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reject-btn\",\n          children: \"\\u274C \\uAC70\\uC808\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, invite.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(InviteList, \"qofzwyZStL3JyY8l33+1oaHthL8=\");\n_c = InviteList;\nexport default InviteList;\nvar _c;\n$RefreshReg$(_c, \"InviteList\");","map":{"version":3,"names":["React","useEffect","useState","axios","getAccessToken","Client","jsxDEV","_jsxDEV","Fragment","_Fragment","InviteList","refreshProjects","_s","invites","setInvites","notifications","setNotifications","fetchInvites","token","response","get","headers","Authorization","console","log","data","error","stompClient","brokerURL","connectHeaders","debug","str","reconnectDelay","heartbeatIncoming","heartbeatOutgoing","onConnect","subscribe","message","newInvite","JSON","parse","body","prev","onStompError","frame","activate","deactivate","acceptInvite","inviteId","post","alert","filter","invite","id","setTimeout","notif","children","className","map","sender","username","fileName","_jsxFileName","lineNumber","columnNumber","project","name","onClick","_c","$RefreshReg$"],"sources":["/Users/woo/Documents/git_local/react/0213/src/components/InviteList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { getAccessToken } from \"../utils/authUtils\";\nimport { Client } from \"@stomp/stompjs\";\nimport \"../styles/InviteList.css\"; // ✅ 스타일 적용\n\nconst InviteList = ({ refreshProjects }) => {\n  const [invites, setInvites] = useState([]);\n  const [notifications, setNotifications] = useState([]); // ✅ 팝업 알림 상태\n\n  useEffect(() => {\n    const fetchInvites = async () => {\n      const token = getAccessToken();\n      try {\n        const response = await axios.get(\"http://localhost:8082/api/team/invites\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        console.log(\"📌 받은 초대 목록:\", response.data);\n        setInvites(response.data);\n      } catch (error) {\n        console.error(\"❌ 초대 목록 불러오기 실패:\", error);\n      }\n    };\n\n    fetchInvites();\n\n    // ✅ WebSocket 연결 (토큰 포함)\n    const stompClient = new Client({\n      brokerURL: \"ws://localhost:8082/ws\", // ✅ WebSocket 직접 사용\n      connectHeaders: {\n        Authorization: `Bearer ${getAccessToken()}`, // ✅ WebSocket 요청에 인증 토큰 추가\n      },\n      debug: (str) => console.log(\"📌 STOMP Debug:\", str),\n      reconnectDelay: 5000,\n      heartbeatIncoming: 4000,\n      heartbeatOutgoing: 4000,\n      onConnect: () => {\n        console.log(\"✅ WebSocket 연결됨\");\n        stompClient.subscribe(\"/topic/invites\", (message) => {\n          const newInvite = JSON.parse(message.body);\n          console.log(\"📩 새로운 초대 알림:\", newInvite);\n          setNotifications((prev) => [...prev, newInvite]); // ✅ 팝업 알림 추가\n          fetchInvites(); // ✅ 초대 목록 새로고침\n        });\n      },\n      onStompError: (frame) => {\n        console.error(\"🚨 STOMP ERROR:\", frame);\n      },\n    });\n\n    stompClient.activate();\n\n    return () => {\n      stompClient.deactivate();\n    };\n  }, []);\n\n  // ✅ 초대 수락 함수\n  const acceptInvite = async (inviteId) => {\n    const token = getAccessToken();\n    try {\n      await axios.post(`http://localhost:8082/api/team/invite/${inviteId}/accept`, null, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      alert(\"✅ 초대를 수락했습니다!\");\n      setInvites((prev) => prev.filter((invite) => invite.id !== inviteId));\n      refreshProjects(); // ✅ 초대 수락 후 프로젝트 목록 갱신\n\n      // ✅ 알림 제거 (3초 후 사라짐)\n      setTimeout(() => {\n        setNotifications((prev) => prev.filter((notif) => notif.id !== inviteId));\n      }, 3000);\n      \n    } catch (error) {\n      console.error(\"❌ 초대 수락 실패:\", error);\n    }\n  };\n\n  return (\n    <>\n      {/* ✅ 팝업 알림 창 */}\n      <div className=\"invite-popup-container\">\n        {notifications.map((invite) => (\n          <div key={invite.id} className=\"invite-popup\">\n            <p>\n              <strong>{invite.sender.username}</strong> 님이 <strong>{invite.project.name}</strong> 프로젝트에 초대했습니다.\n            </p>\n            <button onClick={() => acceptInvite(invite.id)}>✅ 수락</button>\n            <button className=\"reject-btn\">❌ 거절</button>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default InviteList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,oBAAoB;AACnD,SAASC,MAAM,QAAQ,gBAAgB;AACvC,OAAO,0BAA0B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExDD,SAAS,CAAC,MAAM;IACd,MAAMgB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,KAAK,GAAGd,cAAc,CAAC,CAAC;MAC9B,IAAI;QACF,MAAMe,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,wCAAwC,EAAE;UACzEC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUJ,KAAK;UAAG;QAC9C,CAAC,CAAC;QACFK,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEL,QAAQ,CAACM,IAAI,CAAC;QAC1CX,UAAU,CAACK,QAAQ,CAACM,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MAC1C;IACF,CAAC;IAEDT,YAAY,CAAC,CAAC;;IAEd;IACA,MAAMU,WAAW,GAAG,IAAItB,MAAM,CAAC;MAC7BuB,SAAS,EAAE,wBAAwB;MAAE;MACrCC,cAAc,EAAE;QACdP,aAAa,EAAE,UAAUlB,cAAc,CAAC,CAAC,EAAE,CAAE;MAC/C,CAAC;MACD0B,KAAK,EAAGC,GAAG,IAAKR,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEO,GAAG,CAAC;MACnDC,cAAc,EAAE,IAAI;MACpBC,iBAAiB,EAAE,IAAI;MACvBC,iBAAiB,EAAE,IAAI;MACvBC,SAAS,EAAEA,CAAA,KAAM;QACfZ,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;QAC9BG,WAAW,CAACS,SAAS,CAAC,gBAAgB,EAAGC,OAAO,IAAK;UACnD,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACI,IAAI,CAAC;UAC1ClB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEc,SAAS,CAAC;UACvCtB,gBAAgB,CAAE0B,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEJ,SAAS,CAAC,CAAC,CAAC,CAAC;UAClDrB,YAAY,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC,CAAC;MACJ,CAAC;MACD0B,YAAY,EAAGC,KAAK,IAAK;QACvBrB,OAAO,CAACG,KAAK,CAAC,iBAAiB,EAAEkB,KAAK,CAAC;MACzC;IACF,CAAC,CAAC;IAEFjB,WAAW,CAACkB,QAAQ,CAAC,CAAC;IAEtB,OAAO,MAAM;MACXlB,WAAW,CAACmB,UAAU,CAAC,CAAC;IAC1B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,YAAY,GAAG,MAAOC,QAAQ,IAAK;IACvC,MAAM9B,KAAK,GAAGd,cAAc,CAAC,CAAC;IAC9B,IAAI;MACF,MAAMD,KAAK,CAAC8C,IAAI,CAAC,yCAAyCD,QAAQ,SAAS,EAAE,IAAI,EAAE;QACjF3B,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUJ,KAAK;QAAG;MAC9C,CAAC,CAAC;MAEFgC,KAAK,CAAC,eAAe,CAAC;MACtBpC,UAAU,CAAE4B,IAAI,IAAKA,IAAI,CAACS,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACC,EAAE,KAAKL,QAAQ,CAAC,CAAC;MACrErC,eAAe,CAAC,CAAC,CAAC,CAAC;;MAEnB;MACA2C,UAAU,CAAC,MAAM;QACftC,gBAAgB,CAAE0B,IAAI,IAAKA,IAAI,CAACS,MAAM,CAAEI,KAAK,IAAKA,KAAK,CAACF,EAAE,KAAKL,QAAQ,CAAC,CAAC;MAC3E,CAAC,EAAE,IAAI,CAAC;IAEV,CAAC,CAAC,OAAOtB,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;IACrC;EACF,CAAC;EAED,oBACEnB,OAAA,CAAAE,SAAA;IAAA+C,QAAA,eAEEjD,OAAA;MAAKkD,SAAS,EAAC,wBAAwB;MAAAD,QAAA,EACpCzC,aAAa,CAAC2C,GAAG,CAAEN,MAAM,iBACxB7C,OAAA;QAAqBkD,SAAS,EAAC,cAAc;QAAAD,QAAA,gBAC3CjD,OAAA;UAAAiD,QAAA,gBACEjD,OAAA;YAAAiD,QAAA,EAASJ,MAAM,CAACO,MAAM,CAACC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,kBAAI,eAAAzD,OAAA;YAAAiD,QAAA,EAASJ,MAAM,CAACa,OAAO,CAACC;UAAI;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,yEACrF;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJzD,OAAA;UAAQ4D,OAAO,EAAEA,CAAA,KAAMpB,YAAY,CAACK,MAAM,CAACC,EAAE,CAAE;UAAAG,QAAA,EAAC;QAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC7DzD,OAAA;UAAQkD,SAAS,EAAC,YAAY;UAAAD,QAAA,EAAC;QAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GALpCZ,MAAM,CAACC,EAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMd,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC,gBACN,CAAC;AAEP,CAAC;AAACpD,EAAA,CAzFIF,UAAU;AAAA0D,EAAA,GAAV1D,UAAU;AA2FhB,eAAeA,UAAU;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}