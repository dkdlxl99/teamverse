{"ast":null,"code":"var _jsxFileName = \"/Users/woo/Documents/git_local/react/0213/src/components/InviteList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { getAccessToken } from \"../utils/authUtils\";\nimport { over } from \"stompjs\";\nimport SockJS from \"sockjs-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InviteList = ({\n  refreshProjects\n}) => {\n  _s();\n  const [invites, setInvites] = useState([]);\n  const [stompClient, setStompClient] = useState(null);\n  useEffect(() => {\n    const fetchInvites = async () => {\n      const token = getAccessToken();\n      try {\n        const response = await axios.get(\"http://localhost:8082/api/team/invites\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"📌 받은 초대 목록:\", response.data);\n        setInvites(response.data);\n      } catch (error) {\n        console.error(\"❌ 초대 목록 불러오기 실패:\", error);\n      }\n    };\n    fetchInvites();\n\n    // ✅ WebSocket 연결\n    const socket = new SockJS(\"http://localhost:8082/ws\");\n    const stomp = over(socket);\n    stomp.connect({}, () => {\n      var _getAccessToken;\n      console.log(\"✅ WebSocket 연결됨\");\n\n      // ✅ 사용자 이메일을 기반으로 초대 알림 구독\n      const email = (_getAccessToken = getAccessToken()) === null || _getAccessToken === void 0 ? void 0 : _getAccessToken.split(\".\")[1]; // 이메일 추출 (예시)\n      stomp.subscribe(`/topic/invites/${email}`, message => {\n        console.log(\"📩 새로운 초대 알림:\", message.body);\n        fetchInvites();\n      });\n    });\n    setStompClient(stomp);\n    return () => {\n      if (stompClient) {\n        stompClient.disconnect();\n      }\n    };\n  }, []);\n\n  // ✅ 초대 수락 함수\n  const acceptInvite = async inviteId => {\n    const token = getAccessToken();\n    try {\n      await axios.post(`http://localhost:8082/api/team/invite/${inviteId}/accept`, null, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert(\"초대를 수락했습니다!\");\n      fetchInvites(); // ✅ 초대 목록 다시 불러오기\n      refreshProjects(); // ✅ 프로젝트 목록도 새로고침 (추가된 프로젝트가 보이도록)\n    } catch (error) {\n      console.error(\"❌ 초대 수락 실패:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"invite-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uCD08\\uB300 \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), invites.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD83D\\uDCED \\uCD08\\uB300\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 31\n    }, this) : null, invites.map(invite => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invite-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uCD08\\uB300\\uD55C \\uC0AC\\uB78C:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 14\n        }, this), \" \", invite.sender.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uD504\\uB85C\\uC81D\\uD2B8:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 14\n        }, this), \" \", invite.project.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => acceptInvite(invite.id),\n        className: \"accept-btn\",\n        children: \"\\u2705 \\uC218\\uB77D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, invite.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(InviteList, \"3aHp4gdRFpFD27/hhjcELVyg98w=\");\n_c = InviteList;\nexport default InviteList;\nvar _c;\n$RefreshReg$(_c, \"InviteList\");","map":{"version":3,"names":["React","useEffect","useState","axios","getAccessToken","over","SockJS","jsxDEV","_jsxDEV","InviteList","refreshProjects","_s","invites","setInvites","stompClient","setStompClient","fetchInvites","token","response","get","headers","Authorization","console","log","data","error","socket","stomp","connect","_getAccessToken","email","split","subscribe","message","body","disconnect","acceptInvite","inviteId","post","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","invite","sender","username","project","name","onClick","id","_c","$RefreshReg$"],"sources":["/Users/woo/Documents/git_local/react/0213/src/components/InviteList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { getAccessToken } from \"../utils/authUtils\";\nimport { over } from \"stompjs\";\nimport SockJS from \"sockjs-client\";\n\n\nconst InviteList = ({ refreshProjects }) => {\n  const [invites, setInvites] = useState([]);\n  const [stompClient, setStompClient] = useState(null);\n\n\n  useEffect(() => {\n    const fetchInvites = async () => {\n      const token = getAccessToken();\n      try {\n        const response = await axios.get(\"http://localhost:8082/api/team/invites\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        console.log(\"📌 받은 초대 목록:\", response.data);\n        setInvites(response.data);\n      } catch (error) {\n        console.error(\"❌ 초대 목록 불러오기 실패:\", error);\n      }\n    };\n\n    fetchInvites();\n\n    // ✅ WebSocket 연결\n    const socket = new SockJS(\"http://localhost:8082/ws\");\n    const stomp = over(socket);\n    stomp.connect({}, () => {\n      console.log(\"✅ WebSocket 연결됨\");\n\n      // ✅ 사용자 이메일을 기반으로 초대 알림 구독\n      const email = getAccessToken()?.split(\".\")[1]; // 이메일 추출 (예시)\n      stomp.subscribe(`/topic/invites/${email}`, (message) => {\n        console.log(\"📩 새로운 초대 알림:\", message.body);\n        fetchInvites();\n      });\n    });\n\n    setStompClient(stomp);\n\n    return () => {\n      if (stompClient) {\n        stompClient.disconnect();\n      }\n    };\n  }, []);\n\n  // ✅ 초대 수락 함수\n  const acceptInvite = async (inviteId) => {\n    const token = getAccessToken();\n    try {\n      await axios.post(`http://localhost:8082/api/team/invite/${inviteId}/accept`, null, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      alert(\"초대를 수락했습니다!\");\n      fetchInvites(); // ✅ 초대 목록 다시 불러오기\n      refreshProjects(); // ✅ 프로젝트 목록도 새로고침 (추가된 프로젝트가 보이도록)\n    } catch (error) {\n      console.error(\"❌ 초대 수락 실패:\", error);\n    }\n  };\n\n  return (\n    <div className=\"invite-container\">\n      <h2>초대 목록</h2>\n      {invites.length === 0 ? <p>📭 초대가 없습니다.</p> : null}\n      {invites.map((invite) => (\n        <div key={invite.id} className=\"invite-card\">\n          <p><strong>초대한 사람:</strong> {invite.sender.username}</p>\n          <p><strong>프로젝트:</strong> {invite.project.name}</p>\n          <button onClick={() => acceptInvite(invite.id)} className=\"accept-btn\">✅ 수락</button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default InviteList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}