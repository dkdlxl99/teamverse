{"ast":null,"code":"var _jsxFileName = \"/Users/woo/Documents/git_local/react/0213/src/components/Chatbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { getAccessToken } from \"../utils/authUtils\";\nimport { getStompClient } from \"../api/websocket\";\nimport \"../styles/Chatbox.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbox = ({\n  projectId\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  // ✅ 채팅 메시지 불러오기\n  const fetchChatMessages = async () => {\n    if (!projectId) return;\n    const token = getAccessToken();\n    try {\n      const response = await axios.get(`http://localhost:8082/api/chat/${projectId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessages(response.data);\n    } catch (error) {\n      console.error(\"❌ 채팅 기록 불러오기 실패:\", error);\n    }\n  };\n\n  // ✅ WebSocket 구독\n  useEffect(() => {\n    if (!projectId) return;\n    fetchChatMessages();\n    const stompClient = getStompClient();\n    if (!stompClient.connected) {\n      stompClient.activate();\n    }\n\n    // ✅ WebSocket 구독 (Subscribe)\n    const subscription = stompClient.subscribe(`/topic/chat/${projectId}`, message => {\n      const receivedMessage = JSON.parse(message.body);\n      setMessages(prevMessages => [...prevMessages, receivedMessage]);\n    });\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [projectId]);\n\n  // ✅ 메시지 전송\n  const sendMessage = async () => {\n    if (!newMessage.trim() || !projectId) return;\n    const userEmail = localStorage.getItem(\"email\");\n    const userName = localStorage.getItem(\"username\"); // ✅ 추가: 저장된 username 가져오기\n    if (!userEmail || !userName) {\n      console.error(\"❌ 로그인한 사용자 정보를 찾을 수 없습니다!\");\n      return;\n    }\n    try {\n      const messageData = {\n        project: {\n          id: projectId\n        },\n        sender: {\n          email: userEmail,\n          username: userName\n        },\n        // ✅ username 포함\n        content: newMessage.trim()\n      };\n\n      // ✅ WebSocket으로 메시지 전송\n      const stompClient = getStompClient();\n      if (!stompClient || !stompClient.connected) {\n        console.error(\"🚨 WebSocket이 연결되지 않음!\");\n        return;\n      }\n      stompClient.publish({\n        destination: \"/app/chat\",\n        body: JSON.stringify(messageData)\n      });\n      setNewMessage(\"\");\n    } catch (error) {\n      console.error(\"❌ 메시지 전송 실패:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbox-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD300 \\uCC44\\uD305\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.length > 0 ? messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: msg.sender.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }, this), \": \", msg.content, \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83D\\uDCED \\uC544\\uC9C1 \\uBA54\\uC2DC\\uC9C0\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newMessage,\n      onChange: e => setNewMessage(e.target.value),\n      placeholder: \"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"\\uC804\\uC1A1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(Chatbox, \"bFuYpZWMfOU2WhBa/CyaGkj6fmk=\");\n_c = Chatbox;\nexport default Chatbox;\nvar _c;\n$RefreshReg$(_c, \"Chatbox\");","map":{"version":3,"names":["React","useState","useEffect","axios","getAccessToken","getStompClient","jsxDEV","_jsxDEV","Chatbox","projectId","_s","messages","setMessages","newMessage","setNewMessage","fetchChatMessages","token","response","get","headers","Authorization","data","error","console","stompClient","connected","activate","subscription","subscribe","message","receivedMessage","JSON","parse","body","prevMessages","unsubscribe","sendMessage","trim","userEmail","localStorage","getItem","userName","messageData","project","id","sender","email","username","content","publish","destination","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","msg","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/woo/Documents/git_local/react/0213/src/components/Chatbox.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { getAccessToken } from \"../utils/authUtils\";\nimport { getStompClient } from \"../api/websocket\";\nimport \"../styles/Chatbox.css\";\n\nconst Chatbox = ({ projectId }) => {\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState(\"\");\n\n    // ✅ 채팅 메시지 불러오기\n    const fetchChatMessages = async () => {\n        if (!projectId) return;\n\n        const token = getAccessToken();\n        try {\n            const response = await axios.get(`http://localhost:8082/api/chat/${projectId}`, {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            setMessages(response.data);\n        } catch (error) {\n            console.error(\"❌ 채팅 기록 불러오기 실패:\", error);\n        }\n    };\n\n    // ✅ WebSocket 구독\n    useEffect(() => {\n        if (!projectId) return;\n\n        fetchChatMessages();\n\n        const stompClient = getStompClient();\n\n        if (!stompClient.connected) {\n            stompClient.activate();\n        }\n\n        // ✅ WebSocket 구독 (Subscribe)\n        const subscription = stompClient.subscribe(`/topic/chat/${projectId}`, (message) => {\n            const receivedMessage = JSON.parse(message.body);\n            setMessages((prevMessages) => [...prevMessages, receivedMessage]);\n        });\n\n        return () => {\n            subscription.unsubscribe();\n        };\n    }, [projectId]);\n\n    // ✅ 메시지 전송\n    const sendMessage = async () => {\n        if (!newMessage.trim() || !projectId) return;\n\n        const userEmail = localStorage.getItem(\"email\");\n        const userName = localStorage.getItem(\"username\"); // ✅ 추가: 저장된 username 가져오기\n        if (!userEmail || !userName) {\n            console.error(\"❌ 로그인한 사용자 정보를 찾을 수 없습니다!\");\n            return;\n        }\n\n        try {\n            const messageData = {\n                project: { id: projectId },\n                sender: { email: userEmail, username: userName }, // ✅ username 포함\n                content: newMessage.trim(),\n            };\n\n            // ✅ WebSocket으로 메시지 전송\n            const stompClient = getStompClient();\n            if (!stompClient || !stompClient.connected) {\n                console.error(\"🚨 WebSocket이 연결되지 않음!\");\n                return;\n            }\n\n            stompClient.publish({\n                destination: \"/app/chat\",\n                body: JSON.stringify(messageData),\n            });\n\n            setNewMessage(\"\");\n        } catch (error) {\n            console.error(\"❌ 메시지 전송 실패:\", error);\n        }\n    };\n\n    return (\n        <div className=\"chatbox-container\">\n            <h3>팀 채팅</h3>\n            <div className=\"messages\">\n                {messages.length > 0 ? (\n                    messages.map((msg, index) => (\n                        <p key={index}>\n                            <strong>{msg.sender.username}</strong>: {msg.content} {/* ✅ username 표시 */}\n                        </p>\n                    ))\n                ) : (\n                    <p>📭 아직 메시지가 없습니다.</p>\n                )}\n            </div>\n            <input\n                type=\"text\"\n                value={newMessage}\n                onChange={(e) => setNewMessage(e.target.value)}\n                placeholder=\"메시지를 입력하세요...\"\n            />\n            <button onClick={sendMessage}>전송</button>\n        </div>\n    );\n};\n\nexport default Chatbox;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}