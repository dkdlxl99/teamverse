{"ast":null,"code":"var _jsxFileName = \"/Users/woo/Documents/git_local/react/0213/src/components/Chatbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { getAccessToken } from \"../utils/authUtils\";\nimport { getStompClient } from \"../api/websocket\"; // ✅ WebSocket 클라이언트 가져오기\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chatbox = ({\n  projectId\n}) => {\n  _s();\n  // ✅ 프로젝트 ID를 props로 받음\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  // ✅ 채팅 메시지 불러오기 함수\n  const fetchChatMessages = async () => {\n    if (!projectId) {\n      console.warn(\"❌ 프로젝트 ID가 정의되지 않음, 채팅 불러오지 않음.\");\n      return;\n    }\n    const token = getAccessToken();\n    try {\n      const response = await axios.get(`http://localhost:8082/api/chat/${projectId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessages(response.data);\n      console.log(\"✅ 채팅 메시지 로드 성공:\", response.data);\n    } catch (error) {\n      console.error(\"❌ 채팅 기록 불러오기 실패:\", error);\n    }\n  };\n  useEffect(() => {\n    console.log(`🔄 Chatbox에서 감지된 프로젝트 ID: ${projectId}`);\n    if (projectId) {\n      // ✅ 프로젝트 ID가 있을 때만 실행\n      fetchChatMessages();\n    }\n  }, [projectId]);\n\n  // ✅ WebSocket 메시지 전송\n  const sendMessage = async () => {\n    if (!newMessage.trim()) return;\n    if (!projectId) {\n      console.warn(\"❌ 프로젝트 ID가 없음, 메시지를 전송할 수 없음.\");\n      return;\n    }\n    const token = getAccessToken();\n    const stompClient = getStompClient();\n    const messageData = {\n      project: {\n        id: projectId\n      },\n      // ✅ WebSocket에서는 body로 projectId 포함\n      sender: {\n        email: localStorage.getItem(\"userEmail\")\n      },\n      // ✅ 현재 사용자 정보 추가\n      content: newMessage\n    };\n    try {\n      stompClient.publish({\n        destination: `/app/chat/${projectId}`,\n        // ✅ WebSocket 엔드포인트 수정\n        body: JSON.stringify(messageData)\n      });\n      console.log(\"📤 메시지 전송:\", newMessage);\n      setNewMessage(\"\");\n    } catch (error) {\n      console.error(\"❌ 메시지 전송 실패:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbox-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD300 \\uCC44\\uD305\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), projectId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.length > 0 ? messages.map(msg => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: msg.sender.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this), \": \", msg.content]\n        }, msg.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uD83D\\uDCED \\uC544\\uC9C1 \\uBA54\\uC2DC\\uC9C0\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"\\uC804\\uC1A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD83D\\uDEA8 \\uD504\\uB85C\\uC81D\\uD2B8\\uB97C \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this) // ✅ 프로젝트가 없을 때 안내 메시지\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbox, \"bFuYpZWMfOU2WhBa/CyaGkj6fmk=\");\n_c = Chatbox;\nexport default Chatbox;\nvar _c;\n$RefreshReg$(_c, \"Chatbox\");","map":{"version":3,"names":["React","useState","useEffect","axios","getAccessToken","getStompClient","jsxDEV","_jsxDEV","Fragment","_Fragment","Chatbox","projectId","_s","messages","setMessages","newMessage","setNewMessage","fetchChatMessages","console","warn","token","response","get","headers","Authorization","data","log","error","sendMessage","trim","stompClient","messageData","project","id","sender","email","localStorage","getItem","content","publish","destination","body","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","msg","username","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/woo/Documents/git_local/react/0213/src/components/Chatbox.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { getAccessToken } from \"../utils/authUtils\";\nimport { getStompClient } from \"../api/websocket\"; // ✅ WebSocket 클라이언트 가져오기\n\nconst Chatbox = ({ projectId }) => { // ✅ 프로젝트 ID를 props로 받음\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  // ✅ 채팅 메시지 불러오기 함수\n  const fetchChatMessages = async () => {\n    if (!projectId) {\n      console.warn(\"❌ 프로젝트 ID가 정의되지 않음, 채팅 불러오지 않음.\");\n      return;\n    }\n\n    const token = getAccessToken();\n    try {\n      const response = await axios.get(`http://localhost:8082/api/chat/${projectId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setMessages(response.data);\n      console.log(\"✅ 채팅 메시지 로드 성공:\", response.data);\n    } catch (error) {\n      console.error(\"❌ 채팅 기록 불러오기 실패:\", error);\n    }\n  };\n\n  useEffect(() => {\n    console.log(`🔄 Chatbox에서 감지된 프로젝트 ID: ${projectId}`);\n    if (projectId) { // ✅ 프로젝트 ID가 있을 때만 실행\n      fetchChatMessages();\n    }\n  }, [projectId]);\n\n  \n  // ✅ WebSocket 메시지 전송\n  const sendMessage = async () => {\n    if (!newMessage.trim()) return;\n    if (!projectId) {\n      console.warn(\"❌ 프로젝트 ID가 없음, 메시지를 전송할 수 없음.\");\n      return;\n    }\n\n    const token = getAccessToken();\n    const stompClient = getStompClient();\n\n    const messageData = {\n      project: { id: projectId }, // ✅ WebSocket에서는 body로 projectId 포함\n      sender: { email: localStorage.getItem(\"userEmail\") }, // ✅ 현재 사용자 정보 추가\n      content: newMessage,\n    };\n\n    try {\n      stompClient.publish({\n        destination: `/app/chat/${projectId}`, // ✅ WebSocket 엔드포인트 수정\n        body: JSON.stringify(messageData),\n      });\n\n      console.log(\"📤 메시지 전송:\", newMessage);\n      setNewMessage(\"\");\n    } catch (error) {\n      console.error(\"❌ 메시지 전송 실패:\", error);\n    }\n  };\n\n  return (\n    <div className=\"chatbox-container\">\n      <h3>팀 채팅</h3>\n      {projectId ? (\n        <>\n          <div className=\"messages\">\n            {messages.length > 0 ? (\n              messages.map((msg) => (\n                <p key={msg.id}><strong>{msg.sender.username}</strong>: {msg.content}</p>\n              ))\n            ) : (\n              <p>📭 아직 메시지가 없습니다.</p>\n            )}\n          </div>\n          <input\n            type=\"text\"\n            value={newMessage}\n            onChange={(e) => setNewMessage(e.target.value)}\n            placeholder=\"메시지를 입력하세요...\"\n          />\n          <button onClick={sendMessage}>전송</button>\n        </>\n      ) : (\n        <p>🚨 프로젝트를 선택해주세요.</p> // ✅ 프로젝트가 없을 때 안내 메시지\n      )}\n    </div>\n  );\n};\n\nexport default Chatbox;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,oBAAoB;AACnD,SAASC,cAAc,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAAE;EACnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAMgB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI,CAACN,SAAS,EAAE;MACdO,OAAO,CAACC,IAAI,CAAC,iCAAiC,CAAC;MAC/C;IACF;IAEA,MAAMC,KAAK,GAAGhB,cAAc,CAAC,CAAC;IAC9B,IAAI;MACF,MAAMiB,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC,kCAAkCX,SAAS,EAAE,EAAE;QAC9EY,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUJ,KAAK;QAAG;MAC9C,CAAC,CAAC;MACFN,WAAW,CAACO,QAAQ,CAACI,IAAI,CAAC;MAC1BP,OAAO,CAACQ,GAAG,CAAC,iBAAiB,EAAEL,QAAQ,CAACI,IAAI,CAAC;IAC/C,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdT,OAAO,CAACS,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC1C;EACF,CAAC;EAEDzB,SAAS,CAAC,MAAM;IACdgB,OAAO,CAACQ,GAAG,CAAC,6BAA6Bf,SAAS,EAAE,CAAC;IACrD,IAAIA,SAAS,EAAE;MAAE;MACfM,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAACN,SAAS,CAAC,CAAC;;EAGf;EACA,MAAMiB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAACb,UAAU,CAACc,IAAI,CAAC,CAAC,EAAE;IACxB,IAAI,CAAClB,SAAS,EAAE;MACdO,OAAO,CAACC,IAAI,CAAC,+BAA+B,CAAC;MAC7C;IACF;IAEA,MAAMC,KAAK,GAAGhB,cAAc,CAAC,CAAC;IAC9B,MAAM0B,WAAW,GAAGzB,cAAc,CAAC,CAAC;IAEpC,MAAM0B,WAAW,GAAG;MAClBC,OAAO,EAAE;QAAEC,EAAE,EAAEtB;MAAU,CAAC;MAAE;MAC5BuB,MAAM,EAAE;QAAEC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,WAAW;MAAE,CAAC;MAAE;MACtDC,OAAO,EAAEvB;IACX,CAAC;IAED,IAAI;MACFe,WAAW,CAACS,OAAO,CAAC;QAClBC,WAAW,EAAE,aAAa7B,SAAS,EAAE;QAAE;QACvC8B,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,WAAW;MAClC,CAAC,CAAC;MAEFb,OAAO,CAACQ,GAAG,CAAC,YAAY,EAAEX,UAAU,CAAC;MACrCC,aAAa,CAAC,EAAE,CAAC;IACnB,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdT,OAAO,CAACS,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACtC;EACF,CAAC;EAED,oBACEpB,OAAA;IAAKqC,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCtC,OAAA;MAAAsC,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACZtC,SAAS,gBACRJ,OAAA,CAAAE,SAAA;MAAAoC,QAAA,gBACEtC,OAAA;QAAKqC,SAAS,EAAC,UAAU;QAAAC,QAAA,EACtBhC,QAAQ,CAACqC,MAAM,GAAG,CAAC,GAClBrC,QAAQ,CAACsC,GAAG,CAAEC,GAAG,iBACf7C,OAAA;UAAAsC,QAAA,gBAAgBtC,OAAA;YAAAsC,QAAA,EAASO,GAAG,CAAClB,MAAM,CAACmB;UAAQ;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,MAAE,EAACG,GAAG,CAACd,OAAO;QAAA,GAA5Dc,GAAG,CAACnB,EAAE;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA0D,CACzE,CAAC,gBAEF1C,OAAA;UAAAsC,QAAA,EAAG;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MACvB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACN1C,OAAA;QACE+C,IAAI,EAAC,MAAM;QACXC,KAAK,EAAExC,UAAW;QAClByC,QAAQ,EAAGC,CAAC,IAAKzC,aAAa,CAACyC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC/CI,WAAW,EAAC;MAAe;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACF1C,OAAA;QAAQqD,OAAO,EAAEhC,WAAY;QAAAiB,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACzC,CAAC,gBAEH1C,OAAA;MAAAsC,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC;IACzB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrC,EAAA,CAxFIF,OAAO;AAAAmD,EAAA,GAAPnD,OAAO;AA0Fb,eAAeA,OAAO;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}