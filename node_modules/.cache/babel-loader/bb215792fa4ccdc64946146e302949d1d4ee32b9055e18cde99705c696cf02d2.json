{"ast":null,"code":"var _jsxFileName = \"C:\\\\project2\\\\teamverse-2-boot,react - \\uC791\\uC5C5\\\\src\\\\pages\\\\MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Sidebar from \"../components/Sidebar\";\nimport GanttChart from \"../components/GanttChart\";\nimport Chatbox from \"../components/Chatbox\";\nimport Dashboard from \"../components/Dashboard\";\nimport TaskBoard from \"../components/TaskBoard\";\nimport \"../styles/MainPage.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [projectName, setProjectName] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate(); // 수정: useNavigate 훅 사용\n\n  // 🔹 로그인한 유저 정보 가져오기\n  const fetchUserInfo = async () => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      navigate(\"/login\"); // 수정: 로그인하지 않은 경우 로그인 페이지로 이동\n      return;\n    }\n    try {\n      const response = await axios.get(\"http://localhost:8082/api/auth/me\", {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(\"✅ 로그인한 사용자 정보:\", response.data);\n      setUser(response.data);\n      localStorage.setItem(\"user\", JSON.stringify(response.data));\n\n      // 수정: 로그인 후 사용자 ID 기반 URL 이동\n      navigate(`/dashboard/${response.data.id}`);\n    } catch (error) {\n      console.error(\"❌ 사용자 정보 불러오기 실패:\", error);\n      navigate(\"/login\"); // 수정: 사용자 정보 로드 실패 시 로그인 페이지로 이동\n    }\n  };\n\n  // 🔹 로그인한 유저의 프로젝트 불러오기\n  const fetchProjects = async () => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) return;\n    try {\n      const response = await axios.get(\"http://localhost:8082/api/user/projects\", {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(\"✅ 로그인한 유저의 프로젝트 목록:\", response.data);\n      setProjects(response.data);\n      const savedProjectId = localStorage.getItem(\"selectedProjectId\");\n      if (savedProjectId) {\n        const foundProject = response.data.find(proj => proj.id === parseInt(savedProjectId));\n        if (foundProject) {\n          setSelectedProject(foundProject);\n        }\n      }\n    } catch (error) {\n      console.error(\"❌ 프로젝트 목록 불러오기 실패:\", error);\n    }\n  };\n\n  // ✅ 처음 렌더링될 때 유저 정보 및 프로젝트 가져오기\n  useEffect(() => {\n    fetchUserInfo();\n    fetchProjects();\n  }, []);\n  const handleCreateProject = async () => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      alert(\"로그인이 필요합니다.\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:8082/api/user/projects\", {\n        name: projectName,\n        startDate: new Date().toISOString().split(\"T\")[0]\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(\"✅ 프로젝트 생성 성공:\", response.data);\n      setProjects([...projects, response.data]);\n      setSelectedProject(response.data);\n      localStorage.setItem(\"selectedProjectId\", response.data.id);\n      setShowModal(false);\n    } catch (error) {\n      console.error(\"❌ 프로젝트 생성 실패:\", error);\n      alert(\"프로젝트 생성에 실패했습니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [projects.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-gantt\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uD604\\uC7AC \\uD504\\uB85C\\uC81D\\uD2B8\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"create-project-btn\",\n          onClick: () => setShowModal(true),\n          children: \"\\uC0C8\\uB85C\\uC6B4 \\uD504\\uB85C\\uC81D\\uD2B8 \\uC0DD\\uC131\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(GanttChart, {\n        project: projects[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TaskBoard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dashboard, {\n        tasks: []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbox-container\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Chatbox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uC0C8 \\uD504\\uB85C\\uC81D\\uD2B8 \\uC0DD\\uC131\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uD504\\uB85C\\uC81D\\uD2B8 \\uC774\\uB984\",\n          value: projectName,\n          onChange: e => setProjectName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreateProject,\n          children: \"\\uC0DD\\uC131\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowModal(false),\n          children: \"\\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n};\n_s(MainPage, \"x1r21abUwuAHC9J7iQMQalNzXkg=\", true);\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","GanttChart","Chatbox","Dashboard","TaskBoard","axios","jsxDEV","_jsxDEV","MainPage","_s","projects","setProjects","selectedProject","setSelectedProject","showModal","setShowModal","projectName","setProjectName","user","setUser","navigate","useNavigate","fetchUserInfo","token","localStorage","getItem","response","get","headers","Authorization","console","log","data","setItem","JSON","stringify","id","error","fetchProjects","savedProjectId","foundProject","find","proj","parseInt","handleCreateProject","alert","post","name","startDate","Date","toISOString","split","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","onClick","project","tasks","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/project2/teamverse-2-boot,react - 작업/src/pages/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport GanttChart from \"../components/GanttChart\";\r\nimport Chatbox from \"../components/Chatbox\";\r\nimport Dashboard from \"../components/Dashboard\";\r\nimport TaskBoard from \"../components/TaskBoard\";\r\nimport \"../styles/MainPage.css\";\r\nimport axios from \"axios\";\r\n\r\nconst MainPage = () => {\r\n    const [projects, setProjects] = useState([]);\r\n    const [selectedProject, setSelectedProject] = useState(null);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [projectName, setProjectName] = useState(\"\");\r\n    const [user, setUser] = useState(null);\r\n    const navigate = useNavigate(); // 수정: useNavigate 훅 사용\r\n\r\n\r\n    // 🔹 로그인한 유저 정보 가져오기\r\n    const fetchUserInfo = async () => {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (!token) {\r\n            navigate(\"/login\"); // 수정: 로그인하지 않은 경우 로그인 페이지로 이동\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.get(\"http://localhost:8082/api/auth/me\", {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            });\r\n\r\n            console.log(\"✅ 로그인한 사용자 정보:\", response.data);\r\n            setUser(response.data);\r\n            localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n\r\n\r\n            // 수정: 로그인 후 사용자 ID 기반 URL 이동\r\n            navigate(`/dashboard/${response.data.id}`);\r\n\r\n        } catch (error) {\r\n            console.error(\"❌ 사용자 정보 불러오기 실패:\", error);\r\n            navigate(\"/login\"); // 수정: 사용자 정보 로드 실패 시 로그인 페이지로 이동\r\n\r\n        }\r\n    };\r\n\r\n    // 🔹 로그인한 유저의 프로젝트 불러오기\r\n    const fetchProjects = async () => {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (!token) return;\r\n\r\n        try {\r\n            const response = await axios.get(\"http://localhost:8082/api/user/projects\", {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            });\r\n\r\n            console.log(\"✅ 로그인한 유저의 프로젝트 목록:\", response.data);\r\n            setProjects(response.data);\r\n\r\n            const savedProjectId = localStorage.getItem(\"selectedProjectId\");\r\n            if (savedProjectId) {\r\n                const foundProject = response.data.find(proj => proj.id === parseInt(savedProjectId));\r\n                if (foundProject) {\r\n                    setSelectedProject(foundProject);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error(\"❌ 프로젝트 목록 불러오기 실패:\", error);\r\n        }\r\n    };\r\n\r\n    // ✅ 처음 렌더링될 때 유저 정보 및 프로젝트 가져오기\r\n    useEffect(() => {\r\n        fetchUserInfo();\r\n        fetchProjects();\r\n    }, []);\r\n\r\n    const handleCreateProject = async () => {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (!token) {\r\n            alert(\"로그인이 필요합니다.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post(\r\n                \"http://localhost:8082/api/user/projects\",\r\n                { name: projectName, startDate: new Date().toISOString().split(\"T\")[0] },\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                }\r\n            );\r\n\r\n            console.log(\"✅ 프로젝트 생성 성공:\", response.data);\r\n            setProjects([...projects, response.data]);\r\n            setSelectedProject(response.data);\r\n            localStorage.setItem(\"selectedProjectId\", response.data.id);\r\n            setShowModal(false);\r\n        } catch (error) {\r\n            console.error(\"❌ 프로젝트 생성 실패:\", error);\r\n            alert(\"프로젝트 생성에 실패했습니다.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"main-page\">\r\n            <div className=\"content\">\r\n            {projects.length === 0 ? (\r\n                    <div className=\"empty-gantt\">\r\n                        <p>현재 프로젝트가 없습니다.</p>\r\n                        <button className=\"create-project-btn\" onClick={() => setShowModal(true)}>\r\n                            새로운 프로젝트 생성\r\n                        </button>\r\n                    </div>\r\n                ) : (\r\n                    <GanttChart project={projects[0]} />\r\n                )}\r\n                <TaskBoard />\r\n                <Dashboard tasks={[]} />\r\n            </div>\r\n            <div className=\"chatbox-container\">\r\n                <Sidebar />\r\n                <Chatbox />\r\n            </div>\r\n\r\n            {/* 🔹 프로젝트 생성 모달 */}\r\n            {showModal && (\r\n                <div className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <h2>새 프로젝트 생성</h2>\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"프로젝트 이름\" \r\n                            value={projectName}\r\n                            onChange={(e) => setProjectName(e.target.value)}\r\n                        />\r\n                        <button onClick={handleCreateProject}>생성</button>\r\n                        <button onClick={() => setShowModal(false)}>취소</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}