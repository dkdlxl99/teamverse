{"ast":null,"code":"var _jsxFileName = \"/Users/woo/Documents/git_local/react/0206/src/pages/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Sidebar from \"../components/Sidebar\";\nimport GanttChart from \"../components/GanttChart\";\nimport Chatbox from \"../components/Chatbox\";\nimport Dashboard from \"../components/Dashboard\";\nimport TaskBoard from \"../components/TaskBoard\";\nimport \"../styles/MainPage.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const [projects, setProjects] = useState([]); // 로그인한 유저의 프로젝트\n  const [showModal, setShowModal] = useState(false);\n  const [projectName, setProjectName] = useState(\"\");\n  const [user, setUser] = useState(null);\n\n  // ✅ 로그인한 유저 정보 가져오기\n  const fetchUserInfo = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) return;\n      const response = await axios.get(\"http://localhost:8082/api/auth/me\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUser(response.data);\n    } catch (error) {\n      console.error(\"사용자 정보를 가져오는 데 실패했습니다:\", error);\n    }\n  };\n\n  // ✅ 유저의 프로젝트 불러오기\n  const fetchProjects = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) return;\n      const response = await axios.get(\"http://localhost:8082/api/user/projects\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setProjects(response.data);\n    } catch (error) {\n      console.error(\"프로젝트 불러오기 실패:\", error);\n    }\n  };\n\n  // ✅ 처음 렌더링될 때 유저 정보 및 프로젝트 가져오기\n  useEffect(() => {\n    fetchUserInfo();\n    fetchProjects();\n  }, []);\n\n  // ✅ 프로젝트 생성\n  const handleCreateProject = async () => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      alert(\"로그인이 필요합니다.\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:8082/api/user/projects\", {\n        name: projectName,\n        startDate: new Date().toISOString().split(\"T\")[0]\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      setProjects([...projects, response.data]);\n      setShowModal(false);\n    } catch (error) {\n      console.error(\"❌ 프로젝트 생성 실패:\", error);\n      alert(\"프로젝트 생성에 실패했습니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [projects.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-gantt\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uD604\\uC7AC \\uD504\\uB85C\\uC81D\\uD2B8\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"create-project-btn\",\n          onClick: () => setShowModal(true),\n          children: \"\\uC0C8\\uB85C\\uC6B4 \\uD504\\uB85C\\uC81D\\uD2B8 \\uC0DD\\uC131\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(GanttChart, {\n        project: projects[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TaskBoard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Chatbox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(MainPage, \"/mVcVuWHmJKk2K9Jg1VjsiQ0pZo=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","GanttChart","Chatbox","Dashboard","TaskBoard","axios","jsxDEV","_jsxDEV","MainPage","_s","projects","setProjects","showModal","setShowModal","projectName","setProjectName","user","setUser","fetchUserInfo","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","fetchProjects","handleCreateProject","alert","post","name","startDate","Date","toISOString","split","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","onClick","project","_c","$RefreshReg$"],"sources":["/Users/woo/Documents/git_local/react/0206/src/pages/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Sidebar from \"../components/Sidebar\";\nimport GanttChart from \"../components/GanttChart\";\nimport Chatbox from \"../components/Chatbox\";\nimport Dashboard from \"../components/Dashboard\";\nimport TaskBoard from \"../components/TaskBoard\";\nimport \"../styles/MainPage.css\";\nimport axios from \"axios\";\n\nconst MainPage = () => {\n    const [projects, setProjects] = useState([]); // 로그인한 유저의 프로젝트\n    const [showModal, setShowModal] = useState(false);\n    const [projectName, setProjectName] = useState(\"\");\n    const [user, setUser] = useState(null);\n\n    // ✅ 로그인한 유저 정보 가져오기\n    const fetchUserInfo = async () => {\n        try {\n            const token = localStorage.getItem(\"token\");\n            if (!token) return;\n\n            const response = await axios.get(\"http://localhost:8082/api/auth/me\", {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n\n            setUser(response.data);\n        } catch (error) {\n            console.error(\"사용자 정보를 가져오는 데 실패했습니다:\", error);\n        }\n    };\n\n    // ✅ 유저의 프로젝트 불러오기\n    const fetchProjects = async () => {\n        try {\n            const token = localStorage.getItem(\"token\");\n            if (!token) return;\n\n            const response = await axios.get(\"http://localhost:8082/api/user/projects\", {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n\n            setProjects(response.data);\n        } catch (error) {\n            console.error(\"프로젝트 불러오기 실패:\", error);\n        }\n    };\n\n    // ✅ 처음 렌더링될 때 유저 정보 및 프로젝트 가져오기\n    useEffect(() => {\n        fetchUserInfo();\n        fetchProjects();\n    }, []);\n\n    // ✅ 프로젝트 생성\n    const handleCreateProject = async () => {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n            alert(\"로그인이 필요합니다.\");\n            return;\n        }\n\n        try {\n            const response = await axios.post(\n                \"http://localhost:8082/api/user/projects\",\n                { name: projectName, startDate: new Date().toISOString().split(\"T\")[0] },\n                {\n                    headers: { Authorization: `Bearer ${token}`, \"Content-Type\": \"application/json\" },\n                }\n            );\n\n            setProjects([...projects, response.data]);\n            setShowModal(false);\n        } catch (error) {\n            console.error(\"❌ 프로젝트 생성 실패:\", error);\n            alert(\"프로젝트 생성에 실패했습니다.\");\n        }\n    };\n\n    return (\n        <div className=\"main-page\">\n            <div className=\"content\">\n                {projects.length === 0 ? (\n                    <div className=\"empty-gantt\">\n                        <p>현재 프로젝트가 없습니다.</p>\n                        <button className=\"create-project-btn\" onClick={() => setShowModal(true)}>\n                            새로운 프로젝트 생성\n                        </button>\n                    </div>\n                ) : (\n                    <GanttChart project={projects[0]} />\n                )}\n                <TaskBoard />\n                <Dashboard />\n            </div>\n            <Sidebar />\n            <Chatbox />\n        </div>\n    );\n};\n\nexport default MainPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}