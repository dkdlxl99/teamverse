{"ast":null,"code":"var _jsxFileName = \"C:\\\\project2\\\\teamverse-2\\\\src\\\\components\\\\Chatbox.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import '../styles/Chatbox.css';\n// import FileManager from './FileManager';\n// import connectToChat from '../utils/ConnectToChat';\n\n// const Chatbox = () => {\n//   const [messages, setMessages] = useState([\n//     { id: 1, user: 'Alice', content: 'Hello Team!' },\n//     { id: 2, user: 'Bob', content: 'Hi Alice!' },\n//   ]);\n\n//   const [input, setInput] = useState('');\n\n//   const handleSend = () => {\n//     if (input.trim()) {\n//       setMessages([...messages, { id: messages.length + 1, user: 'You', content: input }]);\n//       setInput('');\n//     }\n//   };\n\n//   return (\n//     <div className=\"chatbox\">\n//       <h3>Chat</h3>\n//       <div className=\"messages\">\n//         {messages.map((msg) => (\n//           <p key={msg.id}>\n//             <strong>{msg.user}: </strong>{msg.content}\n//           </p>\n//         ))}\n//       </div>\n//       <div className=\"input-area\">\n//         <input\n//           type=\"text\"\n//           value={input}\n//           onChange={(e) => setInput(e.target.value)}\n//           placeholder=\"Type a message\"\n//         />\n//         <button onClick={handleSend}>Send</button>\n\n//       </div>\n//       <FileManager /> {/* 파일 관리 기능 추가 */}\n//     </div>\n//   );\n// };\n\n// export default Chatbox;\n\nimport React, { useState, useEffect } from 'react';\nimport '../styles/Chatbox.css';\nimport FileManager from './FileManager';\nimport { Client } from \"@stomp/stompjs\";\nimport axios from \"axios\";\nimport { getAccessTokenFromCookie } from \"../utils/utils\"; // ✅ `utils.js`에서 가져오도록 수정\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbox = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [stompClient, setStompClient] = useState(null);\n  const [accessToken, setAccessToken] = useState(null);\n  useEffect(() => {\n    console.log(\"✅ Chatbox 컴포넌트 마운트됨 - useEffect 실행\");\n\n    // ✅ 수정됨: localStorage 대신 쿠키에서 accessToken 가져오기\n    const storedToken = getAccessTokenFromCookie(); // 쿠키에서 토큰 가져오기\n\n    setAccessToken(storedToken);\n    if (!storedToken) {\n      console.warn(\"⛔ Access Token 없음, WebSocket 연결 중단\");\n      return;\n    }\n    console.log(\"🔍 현재 Access Token:\", storedToken);\n    const connectWebSocket = async () => {\n      try {\n        console.log(\"🔍 WebSocket 연결 시도 - Access Token:\", storedToken);\n\n        // ✅ 수정됨: Authorization 헤더 추가하여 secondary-token 요청\n        const response = await axios.post(\"http://localhost:8082/api/user/secondary-token\", {}, {\n          headers: {\n            Authorization: `Bearer ${storedToken}`,\n            // ✅ Authorization 헤더 추가\n            \"Content-Type\": \"application/json\"\n          },\n          withCredentials: true\n        });\n        const secondaryToken = response.data.secondaryToken;\n        console.log(\"✅ Secondary Token:\", secondaryToken);\n\n        // ✅ 수정됨: WebSocket 클라이언트 설정\n        const client = new Client({\n          brokerURL: `ws://localhost:8082/ws?secondaryToken=${secondaryToken}`,\n          reconnectDelay: 5000,\n          onConnect: frame => {\n            console.log(\"🟢 WebSocket 연결 성공:\", frame);\n\n            // ✅ 채팅방 구독\n            client.subscribe(\"/topic/chat/1\", message => {\n              const receivedMessage = JSON.parse(message.body);\n              console.log(\"📩 수신된 메시지:\", receivedMessage);\n              setMessages(prevMessages => [...prevMessages, receivedMessage]);\n            });\n            setStompClient(client);\n          },\n          onStompError: frame => {\n            console.error(\"⛔ WebSocket 연결 실패:\", frame);\n          }\n        });\n        client.activate();\n      } catch (error) {\n        console.error(\"❌ Secondary Token 요청 실패:\", error);\n      }\n    };\n    if (!stompClient) {\n      connectWebSocket();\n    }\n    return () => {\n      console.log(\"🔴 Chatbox 언마운트됨 - WebSocket 종료\");\n      if (stompClient) {\n        stompClient.deactivate();\n        console.log(\"🔴 WebSocket 연결 종료\");\n      }\n    };\n  }, [stompClient]); // ✅ stompClient 의존성 추가 (중복 연결 방지)\n\n  const handleSend = () => {\n    if (input.trim() && stompClient) {\n      const message = {\n        user: \"You\",\n        content: input,\n        teamId: 1\n      };\n      stompClient.publish({\n        destination: \"/app/chat/send\",\n        body: JSON.stringify(message)\n      });\n      setInput('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbox\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Team Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.user, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileManager, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbox, \"tfHjF2Wl0Sod19ZYDVskFaVt0QI=\");\n_c = Chatbox;\nexport default Chatbox;\nvar _c;\n$RefreshReg$(_c, \"Chatbox\");","map":{"version":3,"names":["React","useState","useEffect","FileManager","Client","axios","getAccessTokenFromCookie","jsxDEV","_jsxDEV","Chatbox","_s","messages","setMessages","input","setInput","stompClient","setStompClient","accessToken","setAccessToken","console","log","storedToken","warn","connectWebSocket","response","post","headers","Authorization","withCredentials","secondaryToken","data","client","brokerURL","reconnectDelay","onConnect","frame","subscribe","message","receivedMessage","JSON","parse","body","prevMessages","onStompError","error","activate","deactivate","handleSend","trim","user","content","teamId","publish","destination","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/project2/teamverse-2/src/components/Chatbox.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import '../styles/Chatbox.css';\r\n// import FileManager from './FileManager';\r\n// import connectToChat from '../utils/ConnectToChat';\r\n\r\n\r\n// const Chatbox = () => {\r\n//   const [messages, setMessages] = useState([\r\n//     { id: 1, user: 'Alice', content: 'Hello Team!' },\r\n//     { id: 2, user: 'Bob', content: 'Hi Alice!' },\r\n//   ]);\r\n\r\n//   const [input, setInput] = useState('');\r\n\r\n//   const handleSend = () => {\r\n//     if (input.trim()) {\r\n//       setMessages([...messages, { id: messages.length + 1, user: 'You', content: input }]);\r\n//       setInput('');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"chatbox\">\r\n//       <h3>Chat</h3>\r\n//       <div className=\"messages\">\r\n//         {messages.map((msg) => (\r\n//           <p key={msg.id}>\r\n//             <strong>{msg.user}: </strong>{msg.content}\r\n//           </p>\r\n//         ))}\r\n//       </div>\r\n//       <div className=\"input-area\">\r\n//         <input\r\n//           type=\"text\"\r\n//           value={input}\r\n//           onChange={(e) => setInput(e.target.value)}\r\n//           placeholder=\"Type a message\"\r\n//         />\r\n//         <button onClick={handleSend}>Send</button>\r\n\r\n//       </div>\r\n//       <FileManager /> {/* 파일 관리 기능 추가 */}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Chatbox;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport '../styles/Chatbox.css';\r\nimport FileManager from './FileManager';\r\nimport { Client } from \"@stomp/stompjs\";\r\nimport axios from \"axios\";\r\nimport { getAccessTokenFromCookie } from \"../utils/utils\"; // ✅ `utils.js`에서 가져오도록 수정\r\n\r\nconst Chatbox = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const [stompClient, setStompClient] = useState(null);\r\n  const [accessToken, setAccessToken] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log(\"✅ Chatbox 컴포넌트 마운트됨 - useEffect 실행\");\r\n\r\n    // ✅ 수정됨: localStorage 대신 쿠키에서 accessToken 가져오기\r\n    const storedToken = getAccessTokenFromCookie(); // 쿠키에서 토큰 가져오기\r\n    \r\n    setAccessToken(storedToken);\r\n\r\n    if (!storedToken) {\r\n      console.warn(\"⛔ Access Token 없음, WebSocket 연결 중단\");\r\n      return;\r\n    }\r\n\r\n    console.log(\"🔍 현재 Access Token:\", storedToken);\r\n\r\n    const connectWebSocket = async () => {\r\n      try {\r\n        console.log(\"🔍 WebSocket 연결 시도 - Access Token:\", storedToken);\r\n\r\n        // ✅ 수정됨: Authorization 헤더 추가하여 secondary-token 요청\r\n        const response = await axios.post(\"http://localhost:8082/api/user/secondary-token\", {}, {\r\n          headers: { \r\n            Authorization: `Bearer ${storedToken}`, // ✅ Authorization 헤더 추가\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          withCredentials: true \r\n        });\r\n\r\n        const secondaryToken = response.data.secondaryToken;\r\n        console.log(\"✅ Secondary Token:\", secondaryToken);\r\n\r\n        // ✅ 수정됨: WebSocket 클라이언트 설정\r\n        const client = new Client({\r\n          brokerURL: `ws://localhost:8082/ws?secondaryToken=${secondaryToken}`,\r\n          reconnectDelay: 5000,\r\n          onConnect: (frame) => {\r\n            console.log(\"🟢 WebSocket 연결 성공:\", frame);\r\n\r\n            // ✅ 채팅방 구독\r\n            client.subscribe(\"/topic/chat/1\", (message) => {\r\n              const receivedMessage = JSON.parse(message.body);\r\n              console.log(\"📩 수신된 메시지:\", receivedMessage);\r\n              setMessages((prevMessages) => [...prevMessages, receivedMessage]);\r\n            });\r\n\r\n            setStompClient(client);\r\n          },\r\n          onStompError: (frame) => {\r\n            console.error(\"⛔ WebSocket 연결 실패:\", frame);\r\n          }\r\n        });\r\n\r\n        client.activate();\r\n      } catch (error) {\r\n        console.error(\"❌ Secondary Token 요청 실패:\", error);\r\n      }\r\n    };\r\n\r\n    if (!stompClient) {\r\n      connectWebSocket();\r\n    }\r\n\r\n    return () => {\r\n      console.log(\"🔴 Chatbox 언마운트됨 - WebSocket 종료\");\r\n      if (stompClient) {\r\n        stompClient.deactivate();\r\n        console.log(\"🔴 WebSocket 연결 종료\");\r\n      }\r\n    };\r\n  }, [stompClient]); // ✅ stompClient 의존성 추가 (중복 연결 방지)\r\n\r\n  const handleSend = () => {\r\n    if (input.trim() && stompClient) {\r\n      const message = { user: \"You\", content: input, teamId: 1 };\r\n      stompClient.publish({ destination: \"/app/chat/send\", body: JSON.stringify(message) });\r\n      setInput('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbox\">\r\n      <h3>Team Chat</h3>\r\n      <div className=\"messages\">\r\n        {messages.map((msg, index) => (\r\n          <p key={index}>\r\n            <strong>{msg.user}: </strong>{msg.content}\r\n          </p>\r\n        ))}\r\n      </div>\r\n      <div className=\"input-area\">\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          placeholder=\"Type a message\"\r\n        />\r\n        <button onClick={handleSend}>Send</button>\r\n      </div>\r\n      <FileManager />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}