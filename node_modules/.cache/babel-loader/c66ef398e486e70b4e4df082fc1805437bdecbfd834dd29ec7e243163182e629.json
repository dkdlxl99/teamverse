{"ast":null,"code":"var _jsxFileName = \"/Users/woo/Documents/git_local/react/0213/src/components/Chatbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { getAccessToken } from \"../utils/authUtils\";\nimport { getStompClient } from \"../api/websocket\"; // ✅ WebSocket 클라이언트 추가\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbox = ({\n  projectId\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [stompClient, setStompClient] = useState(null); // ✅ WebSocket 클라이언트 상태 추가\n\n  // ✅ 채팅 메시지 불러오기\n  const fetchChatMessages = async () => {\n    if (!projectId) {\n      console.warn(\"❌ 프로젝트 ID가 정의되지 않음, 채팅 불러오지 않음.\");\n      return;\n    }\n    const token = getAccessToken();\n    try {\n      const response = await axios.get(`http://localhost:8082/api/chat/${projectId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessages(response.data);\n      console.log(\"✅ 채팅 메시지 로드 성공:\", response.data);\n    } catch (error) {\n      console.error(\"❌ 채팅 기록 불러오기 실패:\", error);\n    }\n  };\n\n  // ✅ WebSocket 연결 및 구독 설정\n  useEffect(() => {\n    if (!projectId) return;\n    const client = getStompClient();\n    setStompClient(client);\n    if (!client.connected) {\n      console.log(\"🟢 WebSocket 활성화...\");\n      client.activate();\n    }\n    client.onConnect = () => {\n      console.log(\"✅ WebSocket 연결 성공 & 채팅 구독 시작\");\n      client.subscribe(`/topic/chat/${projectId}`, message => {\n        const receivedMessage = JSON.parse(message.body);\n        console.log(\"📩 새 메시지 수신:\", receivedMessage);\n        setMessages(prevMessages => [...prevMessages, receivedMessage]);\n      });\n    };\n    return () => {\n      console.log(\"🛑 WebSocket 해제\");\n      if (client && client.connected) {\n        client.deactivate();\n      }\n    };\n  }, [projectId]);\n\n  // ✅ 메시지 전송 함수\n  const sendMessage = async () => {\n    if (!newMessage.trim()) return;\n    if (!projectId) {\n      console.warn(\"❌ 프로젝트 ID가 없음, 메시지를 전송할 수 없음.\");\n      return;\n    }\n    const token = getAccessToken();\n    const messageData = {\n      projectId,\n      content: newMessage\n    };\n    try {\n      await axios.post(\"http://localhost:8082/api/chat/send\", messageData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"📤 메시지 전송:\", newMessage);\n      setNewMessage(\"\");\n    } catch (error) {\n      console.error(\"❌ 메시지 전송 실패:\", error);\n    }\n  };\n\n  // ✅ 프로젝트 ID가 없을 경우, UI 렌더링 방지\n  if (!projectId) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"chatbox-warning\",\n      children: \"\\uD83D\\uDEA8 \\uD504\\uB85C\\uC81D\\uD2B8\\uB97C \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbox-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD300 \\uCC44\\uD305\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.length > 0 ? messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: msg.sender.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 28\n        }, this), \": \", msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83D\\uDCED \\uC544\\uC9C1 \\uBA54\\uC2DC\\uC9C0\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newMessage,\n      onChange: e => setNewMessage(e.target.value),\n      placeholder: \"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"\\uC804\\uC1A1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbox, \"kfcGgiPd/Ojbtc6LnEKYAulk2KE=\");\n_c = Chatbox;\nexport default Chatbox;\nvar _c;\n$RefreshReg$(_c, \"Chatbox\");","map":{"version":3,"names":["React","useState","useEffect","axios","getAccessToken","getStompClient","jsxDEV","_jsxDEV","Chatbox","projectId","_s","messages","setMessages","newMessage","setNewMessage","stompClient","setStompClient","fetchChatMessages","console","warn","token","response","get","headers","Authorization","data","log","error","client","connected","activate","onConnect","subscribe","message","receivedMessage","JSON","parse","body","prevMessages","deactivate","sendMessage","trim","messageData","content","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","msg","index","sender","username","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/woo/Documents/git_local/react/0213/src/components/Chatbox.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { getAccessToken } from \"../utils/authUtils\";\nimport { getStompClient } from \"../api/websocket\"; // ✅ WebSocket 클라이언트 추가\n\nconst Chatbox = ({ projectId }) => {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [stompClient, setStompClient] = useState(null); // ✅ WebSocket 클라이언트 상태 추가\n\n  // ✅ 채팅 메시지 불러오기\n  const fetchChatMessages = async () => {\n    if (!projectId) {\n      console.warn(\"❌ 프로젝트 ID가 정의되지 않음, 채팅 불러오지 않음.\");\n      return;\n    }\n\n    const token = getAccessToken();\n    try {\n      const response = await axios.get(`http://localhost:8082/api/chat/${projectId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setMessages(response.data);\n      console.log(\"✅ 채팅 메시지 로드 성공:\", response.data);\n    } catch (error) {\n      console.error(\"❌ 채팅 기록 불러오기 실패:\", error);\n    }\n  };\n\n  // ✅ WebSocket 연결 및 구독 설정\n  useEffect(() => {\n    if (!projectId) return;\n\n    const client = getStompClient();\n    setStompClient(client);\n\n    if (!client.connected) {\n      console.log(\"🟢 WebSocket 활성화...\");\n      client.activate();\n    }\n\n    client.onConnect = () => {\n      console.log(\"✅ WebSocket 연결 성공 & 채팅 구독 시작\");\n      client.subscribe(`/topic/chat/${projectId}`, (message) => {\n        const receivedMessage = JSON.parse(message.body);\n        console.log(\"📩 새 메시지 수신:\", receivedMessage);\n        setMessages((prevMessages) => [...prevMessages, receivedMessage]);\n      });\n    };\n\n    return () => {\n      console.log(\"🛑 WebSocket 해제\");\n      if (client && client.connected) {\n        client.deactivate();\n      }\n    };\n  }, [projectId]);\n\n  // ✅ 메시지 전송 함수\n  const sendMessage = async () => {\n    if (!newMessage.trim()) return;\n    if (!projectId) {\n      console.warn(\"❌ 프로젝트 ID가 없음, 메시지를 전송할 수 없음.\");\n      return;\n    }\n\n    const token = getAccessToken();\n    const messageData = {\n      projectId,\n      content: newMessage,\n    };\n\n    try {\n      await axios.post(\"http://localhost:8082/api/chat/send\", messageData, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      console.log(\"📤 메시지 전송:\", newMessage);\n      setNewMessage(\"\");\n    } catch (error) {\n      console.error(\"❌ 메시지 전송 실패:\", error);\n    }\n  };\n\n  // ✅ 프로젝트 ID가 없을 경우, UI 렌더링 방지\n  if (!projectId) {\n    return <p className=\"chatbox-warning\">🚨 프로젝트를 선택해주세요.</p>;\n  }\n\n  return (\n    <div className=\"chatbox-container\">\n      <h3>팀 채팅</h3>\n      <div className=\"messages\">\n        {messages.length > 0 ? (\n          messages.map((msg, index) => (\n            <p key={index}><strong>{msg.sender.username}</strong>: {msg.content}</p>\n          ))\n        ) : (\n          <p>📭 아직 메시지가 없습니다.</p>\n        )}\n      </div>\n      <input\n        type=\"text\"\n        value={newMessage}\n        onChange={(e) => setNewMessage(e.target.value)}\n        placeholder=\"메시지를 입력하세요...\"\n      />\n      <button onClick={sendMessage}>전송</button>\n    </div>\n  );\n};\n\nexport default Chatbox;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}