{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nconst SessionTimeout = () => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      handleRefreshToken();\n    }, 55 * 60 * 1000); // 55분 후 실행\n\n    return () => clearTimeout(timeout);\n  }, []);\n  const handleRefreshToken = async () => {\n    try {\n      const refreshToken = localStorage.getItem(\"refreshToken\");\n      const response = await axios.post(\"/api/auth/refresh\", {\n        refreshToken\n      });\n      localStorage.setItem(\"accessToken\", response.data.accessToken);\n      localStorage.setItem(\"refreshToken\", response.data.refreshToken);\n    } catch (error) {\n      if (window.confirm(\"로그인 유지할까요?\")) {\n        navigate(\"/login\");\n      } else {\n        handleLogout();\n      }\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem(\"accessToken\");\n    localStorage.removeItem(\"refreshToken\");\n    alert(\"자동 로그아웃되었습니다.\");\n    navigate(\"/login\");\n  };\n  return null;\n};\n_s(SessionTimeout, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = SessionTimeout;\nexport default SessionTimeout;\nvar _c;\n$RefreshReg$(_c, \"SessionTimeout\");","map":{"version":3,"names":["useEffect","useNavigate","axios","SessionTimeout","_s","navigate","timeout","setTimeout","handleRefreshToken","clearTimeout","refreshToken","localStorage","getItem","response","post","setItem","data","accessToken","error","window","confirm","handleLogout","removeItem","alert","_c","$RefreshReg$"],"sources":["C:/project2/teamverse-2 - 복사본/src/components/SessionTimeout.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst SessionTimeout = () => {\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            handleRefreshToken();\r\n        }, 55 * 60 * 1000); // 55분 후 실행\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, []);\r\n\r\n    const handleRefreshToken = async () => {\r\n        try {\r\n            const refreshToken = localStorage.getItem(\"refreshToken\");\r\n            const response = await axios.post(\"/api/auth/refresh\", { refreshToken });\r\n            localStorage.setItem(\"accessToken\", response.data.accessToken);\r\n            localStorage.setItem(\"refreshToken\", response.data.refreshToken);\r\n        } catch (error) {\r\n            if (window.confirm(\"로그인 유지할까요?\")) {\r\n                navigate(\"/login\");\r\n            } else {\r\n                handleLogout();\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem(\"accessToken\");\r\n        localStorage.removeItem(\"refreshToken\");\r\n        alert(\"자동 로그아웃되었습니다.\");\r\n        navigate(\"/login\");\r\n    };\r\n\r\n    return null;\r\n};\r\n\r\nexport default SessionTimeout;\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGJ,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACZ,MAAMM,OAAO,GAAGC,UAAU,CAAC,MAAM;MAC7BC,kBAAkB,CAAC,CAAC;IACxB,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;;IAEpB,OAAO,MAAMC,YAAY,CAACH,OAAO,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACA,MAAME,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MACzD,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,mBAAmB,EAAE;QAAEJ;MAAa,CAAC,CAAC;MACxEC,YAAY,CAACI,OAAO,CAAC,aAAa,EAAEF,QAAQ,CAACG,IAAI,CAACC,WAAW,CAAC;MAC9DN,YAAY,CAACI,OAAO,CAAC,cAAc,EAAEF,QAAQ,CAACG,IAAI,CAACN,YAAY,CAAC;IACpE,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACZ,IAAIC,MAAM,CAACC,OAAO,CAAC,YAAY,CAAC,EAAE;QAC9Bf,QAAQ,CAAC,QAAQ,CAAC;MACtB,CAAC,MAAM;QACHgB,YAAY,CAAC,CAAC;MAClB;IACJ;EACJ,CAAC;EAED,MAAMA,YAAY,GAAGA,CAAA,KAAM;IACvBV,YAAY,CAACW,UAAU,CAAC,aAAa,CAAC;IACtCX,YAAY,CAACW,UAAU,CAAC,cAAc,CAAC;IACvCC,KAAK,CAAC,eAAe,CAAC;IACtBlB,QAAQ,CAAC,QAAQ,CAAC;EACtB,CAAC;EAED,OAAO,IAAI;AACf,CAAC;AAACD,EAAA,CAlCID,cAAc;EAAA,QACCF,WAAW;AAAA;AAAAuB,EAAA,GAD1BrB,cAAc;AAoCpB,eAAeA,cAAc;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}