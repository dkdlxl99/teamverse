{"ast":null,"code":"var _jsxFileName = \"C:\\\\project2\\\\teamverse-2\\\\src\\\\components\\\\Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { logoutUser } from \"../api/authApi\";\nimport \"../styles/Navbar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // ✅ 로그인 상태를 useState로 관리\n\n  useEffect(() => {\n    const checkLoginStatus = () => {\n      const cookies = document.cookie.split(\"; \").reduce((acc, cookie) => {\n        const [key, value] = cookie.split(\"=\");\n        acc[key] = value;\n        return acc;\n      }, {});\n      setIsLoggedIn(!!cookies.accessToken); // ✅ accessToken이 있으면 로그인 상태로 설정\n    };\n    checkLoginStatus();\n  }, []); // ✅ 컴포넌트가 마운트될 때 로그인 상태 확인\n\n  const handleLogout = async () => {\n    await logoutUser();\n    setIsLoggedIn(false); // ✅ 상태 업데이트\n    window.location.href = \"/login\"; // ✅ 로그아웃 후 로그인 페이지로 이동\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-logo\",\n      children: \"TeamVerse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-links\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/statistics\",\n        children: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/team-status\",\n        children: \"Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/settings\",\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"logout-btn\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        className: \"login-btn\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useEffect","useState","Link","logoutUser","jsxDEV","_jsxDEV","Navbar","_s","isLoggedIn","setIsLoggedIn","checkLoginStatus","cookies","document","cookie","split","reduce","acc","key","value","accessToken","handleLogout","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","_c","$RefreshReg$"],"sources":["C:/project2/teamverse-2/src/components/Navbar.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { logoutUser } from \"../api/authApi\";\r\nimport \"../styles/Navbar.css\";\r\n\r\nconst Navbar = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // ✅ 로그인 상태를 useState로 관리\r\n\r\n  useEffect(() => {\r\n    const checkLoginStatus = () => {\r\n      const cookies = document.cookie.split(\"; \").reduce((acc, cookie) => {\r\n        const [key, value] = cookie.split(\"=\");\r\n        acc[key] = value;\r\n        return acc;\r\n      }, {});\r\n\r\n      setIsLoggedIn(!!cookies.accessToken); // ✅ accessToken이 있으면 로그인 상태로 설정\r\n    };\r\n\r\n    checkLoginStatus();\r\n  }, []); // ✅ 컴포넌트가 마운트될 때 로그인 상태 확인\r\n\r\n  const handleLogout = async () => {\r\n    await logoutUser();\r\n    setIsLoggedIn(false); // ✅ 상태 업데이트\r\n    window.location.href = \"/login\"; // ✅ 로그아웃 후 로그인 페이지로 이동\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"navbar-logo\">TeamVerse</div>\r\n      <div className=\"navbar-links\">\r\n        <Link to=\"/\">Dashboard</Link>\r\n        <Link to=\"/statistics\">Statistics</Link>\r\n        <Link to=\"/team-status\">Team</Link>\r\n        <Link to=\"/settings\">Settings</Link>\r\n\r\n        {/* ✅ 로그인 상태에 따라 버튼 변경 */}\r\n        {isLoggedIn ? (\r\n          <button onClick={handleLogout} className=\"logout-btn\">Logout</button>\r\n        ) : (\r\n          <Link to=\"/login\" className=\"login-btn\">Login</Link>\r\n        )}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}