{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = \"http://localhost:8082\";\nexport const registerUser = async userData => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/register`, userData);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || \"회원가입 실패\";\n  }\n};\nexport const loginUser = async loginData => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/login`, loginData, {\n      withCredentials: true // ✅ 쿠키 기반 인증 사용\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || \"로그인 실패\";\n  }\n};\nexport const getUserInfo = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/api/user`, {\n      withCredentials: true\n    });\n    return response.data;\n  } catch (error) {\n    return null; // 인증되지 않은 경우 null 반환\n  }\n};\nexport const logoutUser = async () => {\n  try {\n    await axios.post(`${API_BASE_URL}/api/user/logout`, {}, {\n      withCredentials: true\n    });\n  } catch (error) {\n    console.error(\"로그아웃 실패\", error);\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","registerUser","userData","response","post","data","error","_error$response","loginUser","loginData","withCredentials","_error$response2","getUserInfo","get","logoutUser","console"],"sources":["C:/project2/teamverse-2/src/api/authApi.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_BASE_URL = \"http://localhost:8082\";\r\n\r\nexport const registerUser = async (userData) => {\r\n  try {\r\n    const response = await axios.post(`${API_BASE_URL}/register`, userData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || \"회원가입 실패\";\r\n  }\r\n};\r\n\r\nexport const loginUser = async (loginData) => {\r\n  try {\r\n    const response = await axios.post(`${API_BASE_URL}/login`, loginData, {\r\n      withCredentials: true, // ✅ 쿠키 기반 인증 사용\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || \"로그인 실패\";\r\n  }\r\n};\r\n\r\nexport const getUserInfo = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}/api/user`, {\r\n      withCredentials: true,\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    return null; // 인증되지 않은 경우 null 반환\r\n  }\r\n};\r\n\r\nexport const logoutUser = async () => {\r\n  try {\r\n    await axios.post(`${API_BASE_URL}/api/user/logout`, {}, { withCredentials: true });\r\n  } catch (error) {\r\n    console.error(\"로그아웃 실패\", error);\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,uBAAuB;AAE5C,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,YAAY,WAAW,EAAEE,QAAQ,CAAC;IACvE,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACd,MAAM,EAAAA,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAI,SAAS;EACzC;AACF,CAAC;AAED,OAAO,MAAMG,SAAS,GAAG,MAAOC,SAAS,IAAK;EAC5C,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,YAAY,QAAQ,EAAES,SAAS,EAAE;MACpEC,eAAe,EAAE,IAAI,CAAE;IACzB,CAAC,CAAC;IACF,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAK,gBAAA;IACd,MAAM,EAAAA,gBAAA,GAAAL,KAAK,CAACH,QAAQ,cAAAQ,gBAAA,uBAAdA,gBAAA,CAAgBN,IAAI,KAAI,QAAQ;EACxC;AACF,CAAC;AAED,OAAO,MAAMO,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMJ,KAAK,CAACc,GAAG,CAAC,GAAGb,YAAY,WAAW,EAAE;MAC3DU,eAAe,EAAE;IACnB,CAAC,CAAC;IACF,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAO,IAAI,CAAC,CAAC;EACf;AACF,CAAC;AAED,OAAO,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMf,KAAK,CAACK,IAAI,CAAC,GAAGJ,YAAY,kBAAkB,EAAE,CAAC,CAAC,EAAE;MAAEU,eAAe,EAAE;IAAK,CAAC,CAAC;EACpF,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdS,OAAO,CAACT,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;EACjC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}