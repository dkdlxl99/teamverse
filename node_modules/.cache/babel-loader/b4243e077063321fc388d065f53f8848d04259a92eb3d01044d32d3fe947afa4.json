{"ast":null,"code":"// // 로그인 성공 시 토큰 저장\n// export const handleLoginSuccess = (accessToken, refreshToken) => {\n//     localStorage.setItem(\"accessToken\", accessToken);\n//     localStorage.setItem(\"refreshToken\", refreshToken);\n\n// };\n\n// // 로그아웃 처리\n// export const handleLogout = () => {\n//     localStorage.removeItem(\"accessToken\");\n//     localStorage.removeItem(\"refreshToken\");\n//     window.location.href = \"/login\";\n// };\n\n// 로그인 성공 시 토큰 저장\nexport const handleLoginSuccess = (accessToken, refreshToken, rememberMe) => {\n  console.log(\"✅ Login Success - rememberMe:\", rememberMe);\n  console.log(\"✅ accessToken:\", accessToken);\n  console.log(\"✅ refreshToken:\", refreshToken);\n  if (rememberMe) {\n    localStorage.setItem(\"accessToken\", accessToken);\n    localStorage.setItem(\"refreshToken\", refreshToken);\n  } else {\n    sessionStorage.setItem(\"accessToken\", accessToken);\n    sessionStorage.setItem(\"refreshToken\", refreshToken); // ✅ rememberMe가 false여도 refreshToken 저장\n  }\n  console.log(\"🔍 localStorage refreshToken:\", localStorage.getItem(\"refreshToken\"));\n  console.log(\"🔍 sessionStorage refreshToken:\", sessionStorage.getItem(\"refreshToken\"));\n};\n\n// 로그아웃 처리\nexport const handleLogout = () => {\n  localStorage.removeItem(\"accessToken\");\n  localStorage.removeItem(\"refreshToken\");\n  sessionStorage.removeItem(\"accessToken\");\n  sessionStorage.removeItem(\"refreshToken\");\n  window.location.href = \"/login\";\n};\n\n// 현재 저장된 accessToken 가져오기 (localStorage 우선, 없으면 sessionStorage 확인)\nexport const getAccessToken = () => {\n  return localStorage.getItem(\"accessToken\") || sessionStorage.getItem(\"accessToken\");\n};\n// 현재 저장된 refreshToken 가져오기 (세션/로컬 체크)\nexport const getRefreshToken = () => {\n  return localStorage.getItem(\"refreshToken\") || sessionStorage.getItem(\"refreshToken\");\n};","map":{"version":3,"names":["handleLoginSuccess","accessToken","refreshToken","rememberMe","console","log","localStorage","setItem","sessionStorage","getItem","handleLogout","removeItem","window","location","href","getAccessToken","getRefreshToken"],"sources":["C:/project2/teamverse-2-boot,react - 작업/src/utils/authUtils.js"],"sourcesContent":["// // 로그인 성공 시 토큰 저장\r\n// export const handleLoginSuccess = (accessToken, refreshToken) => {\r\n//     localStorage.setItem(\"accessToken\", accessToken);\r\n//     localStorage.setItem(\"refreshToken\", refreshToken);\r\n\r\n// };\r\n\r\n// // 로그아웃 처리\r\n// export const handleLogout = () => {\r\n//     localStorage.removeItem(\"accessToken\");\r\n//     localStorage.removeItem(\"refreshToken\");\r\n//     window.location.href = \"/login\";\r\n// };\r\n\r\n// 로그인 성공 시 토큰 저장\r\nexport const handleLoginSuccess = (accessToken, refreshToken, rememberMe) => {\r\n    console.log(\"✅ Login Success - rememberMe:\", rememberMe);\r\n    console.log(\"✅ accessToken:\", accessToken);\r\n    console.log(\"✅ refreshToken:\", refreshToken);\r\n    if (rememberMe) {\r\n        localStorage.setItem(\"accessToken\", accessToken);\r\n        localStorage.setItem(\"refreshToken\", refreshToken);\r\n    } else {\r\n        sessionStorage.setItem(\"accessToken\", accessToken);\r\n        sessionStorage.setItem(\"refreshToken\", refreshToken); // ✅ rememberMe가 false여도 refreshToken 저장\r\n    }\r\n\r\n    console.log(\"🔍 localStorage refreshToken:\", localStorage.getItem(\"refreshToken\"));\r\n    console.log(\"🔍 sessionStorage refreshToken:\", sessionStorage.getItem(\"refreshToken\"));\r\n};\r\n\r\n// 로그아웃 처리\r\nexport const handleLogout = () => {\r\n    localStorage.removeItem(\"accessToken\");\r\n    localStorage.removeItem(\"refreshToken\");\r\n    sessionStorage.removeItem(\"accessToken\");\r\n    sessionStorage.removeItem(\"refreshToken\");\r\n    window.location.href = \"/login\";\r\n};\r\n\r\n// 현재 저장된 accessToken 가져오기 (localStorage 우선, 없으면 sessionStorage 확인)\r\nexport const getAccessToken = () => {\r\n    return localStorage.getItem(\"accessToken\") || sessionStorage.getItem(\"accessToken\");\r\n};\r\n// 현재 저장된 refreshToken 가져오기 (세션/로컬 체크)\r\nexport const getRefreshToken = () => {\r\n    return localStorage.getItem(\"refreshToken\") || sessionStorage.getItem(\"refreshToken\");\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO,MAAMA,kBAAkB,GAAGA,CAACC,WAAW,EAAEC,YAAY,EAAEC,UAAU,KAAK;EACzEC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEF,UAAU,CAAC;EACxDC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,WAAW,CAAC;EAC1CG,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,YAAY,CAAC;EAC5C,IAAIC,UAAU,EAAE;IACZG,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEN,WAAW,CAAC;IAChDK,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEL,YAAY,CAAC;EACtD,CAAC,MAAM;IACHM,cAAc,CAACD,OAAO,CAAC,aAAa,EAAEN,WAAW,CAAC;IAClDO,cAAc,CAACD,OAAO,CAAC,cAAc,EAAEL,YAAY,CAAC,CAAC,CAAC;EAC1D;EAEAE,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEC,YAAY,CAACG,OAAO,CAAC,cAAc,CAAC,CAAC;EAClFL,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEG,cAAc,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC;AAC1F,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAC9BJ,YAAY,CAACK,UAAU,CAAC,aAAa,CAAC;EACtCL,YAAY,CAACK,UAAU,CAAC,cAAc,CAAC;EACvCH,cAAc,CAACG,UAAU,CAAC,aAAa,CAAC;EACxCH,cAAc,CAACG,UAAU,CAAC,cAAc,CAAC;EACzCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;AACnC,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAChC,OAAOT,YAAY,CAACG,OAAO,CAAC,aAAa,CAAC,IAAID,cAAc,CAACC,OAAO,CAAC,aAAa,CAAC;AACvF,CAAC;AACD;AACA,OAAO,MAAMO,eAAe,GAAGA,CAAA,KAAM;EACjC,OAAOV,YAAY,CAACG,OAAO,CAAC,cAAc,CAAC,IAAID,cAAc,CAACC,OAAO,CAAC,cAAc,CAAC;AACzF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}