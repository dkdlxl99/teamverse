{"ast":null,"code":"var _jsxFileName = \"C:\\\\project2\\\\teamverse-2-boot,react - \\uC791\\uC5C5\\\\src\\\\pages\\\\TaskPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { getAccessToken } from \"../utils/authUtils\";\nimport TaskModal from \"../components/TaskModal\";\nimport TaskDetailModal from \"../components/TaskDetailModal\"; // Task 상세 보기 모달 추가\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskPage = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const queryParams = new URLSearchParams(location.search);\n  const projectId = queryParams.get(\"projectId\");\n  const [tasks, setTasks] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editTask, setEditTask] = useState(null); //수정할 Task 저장\n  const [selectedTask, setSelectedTask] = useState(null); // Task 상세 보기용 상태\n\n  // ✅ Task 목록 불러오기\n  const fetchTasks = async () => {\n    const token = getAccessToken();\n    if (!token) {\n      alert(\"로그인이 필요합니다.\");\n      navigate(\"/login\");\n      return;\n    }\n    try {\n      const response = await axios.get(`http://localhost:8082/api/user/tasks?projectId=${projectId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        },\n        withCredentials: true\n      });\n      setTasks(response.data);\n    } catch (error) {\n      console.error(\"❌ Task 목록 불러오기 실패:\", error);\n    }\n  };\n\n  // ✅ Task 추가 후 목록 갱신\n  const refreshTasks = () => {\n    fetchTasks();\n  };\n\n  // ✅ Task 삭제 함수 \n  const handleDeleteTask = async taskId => {\n    const token = getAccessToken();\n    if (!token) {\n      alert(\"로그인이 필요합니다.\");\n      return;\n    }\n    if (!window.confirm(\"정말로 이 업무를 삭제하시겠습니까?\")) return;\n    try {\n      await axios.delete(`http://localhost:8082/api/user/tasks/${taskId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        },\n        withCredentials: true\n      });\n      alert(\"업무가 성공적으로 삭제되었습니다.\");\n      refreshTasks(); // ✅ 삭제 후 목록 새로고침\n    } catch (error) {\n      console.error(\"❌ Task 삭제 실패:\", error);\n      alert(\"업무 삭제에 실패했습니다.\");\n    }\n  };\n  useEffect(() => {\n    if (projectId) {\n      fetchTasks();\n    }\n  }, [projectId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task \\uAD00\\uB9AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setEditTask(null);\n        setIsModalOpen(true);\n      },\n      children: \"+ \\uC5C5\\uBB34 \\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), \" - \", task.status, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), \" \\uD83D\\uDDD3 **\\uC2DC\\uC791\\uC77C**: \", task.startDate, \" | \\u23F3 **\\uB9C8\\uAC10\\uC77C**: \", task.dueDate, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setEditTask(task);\n            setIsModalOpen(true);\n          },\n          children: \"\\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedTask(task),\n          style: {\n            marginLeft: \"10px\",\n            color: \"blue\"\n          },\n          children: \"\\uC0C1\\uC138 \\uBCF4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTask(task.id),\n          style: {\n            marginLeft: \"10px\",\n            color: \"red\"\n          },\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), \" \"]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(TaskModal, {\n      onClose: () => setIsModalOpen(false),\n      projectId: projectId,\n      refreshTasks: refreshTasks,\n      editTask: editTask // ✅ 수정할 Task 전달\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), selectedTask && /*#__PURE__*/_jsxDEV(TaskDetailModal, {\n      task: selectedTask,\n      onClose: () => setSelectedTask(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskPage, \"zNxh05DR4ESiSZUoiBiQNqPGOD4=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = TaskPage;\nexport default TaskPage;\nvar _c;\n$RefreshReg$(_c, \"TaskPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","axios","getAccessToken","TaskModal","TaskDetailModal","jsxDEV","_jsxDEV","TaskPage","_s","location","navigate","queryParams","URLSearchParams","search","projectId","get","tasks","setTasks","isModalOpen","setIsModalOpen","editTask","setEditTask","selectedTask","setSelectedTask","fetchTasks","token","alert","response","headers","Authorization","withCredentials","data","error","console","refreshTasks","handleDeleteTask","taskId","window","confirm","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","task","name","status","startDate","dueDate","style","marginLeft","color","id","onClose","_c","$RefreshReg$"],"sources":["C:/project2/teamverse-2-boot,react - 작업/src/pages/TaskPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { getAccessToken } from \"../utils/authUtils\";\r\nimport TaskModal from \"../components/TaskModal\";\r\nimport TaskDetailModal from \"../components/TaskDetailModal\"; // Task 상세 보기 모달 추가\r\n\r\n\r\nconst TaskPage = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const projectId = queryParams.get(\"projectId\");\r\n\r\n  const [tasks, setTasks] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [editTask, setEditTask] = useState(null); //수정할 Task 저장\r\n  const [selectedTask, setSelectedTask] = useState(null); // Task 상세 보기용 상태\r\n\r\n\r\n  // ✅ Task 목록 불러오기\r\n  const fetchTasks = async () => {\r\n    const token = getAccessToken();\r\n    if (!token) {\r\n      alert(\"로그인이 필요합니다.\");\r\n      navigate(\"/login\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get(`http://localhost:8082/api/user/tasks?projectId=${projectId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        withCredentials: true,\r\n      });\r\n\r\n      setTasks(response.data);\r\n    } catch (error) {\r\n      console.error(\"❌ Task 목록 불러오기 실패:\", error);\r\n    }\r\n  };\r\n\r\n  // ✅ Task 추가 후 목록 갱신\r\n  const refreshTasks = () => {\r\n    fetchTasks();\r\n  };\r\n\r\n  // ✅ Task 삭제 함수 \r\n  const handleDeleteTask = async (taskId) => {\r\n    const token = getAccessToken();\r\n    if (!token) {\r\n      alert(\"로그인이 필요합니다.\");\r\n      return;\r\n    }\r\n\r\n    if (!window.confirm(\"정말로 이 업무를 삭제하시겠습니까?\")) return;\r\n\r\n    try {\r\n      await axios.delete(`http://localhost:8082/api/user/tasks/${taskId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        withCredentials: true,\r\n      });\r\n\r\n      alert(\"업무가 성공적으로 삭제되었습니다.\");\r\n      refreshTasks(); // ✅ 삭제 후 목록 새로고침\r\n    } catch (error) {\r\n      console.error(\"❌ Task 삭제 실패:\", error);\r\n      alert(\"업무 삭제에 실패했습니다.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (projectId) {\r\n      fetchTasks();\r\n    }\r\n  }, [projectId]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Task 관리</h1>\r\n      <button onClick={() => { setEditTask(null); setIsModalOpen(true); }}>+ 업무 추가</button>\r\n\r\n      {/* ✅ Task 목록 표시 */}\r\n      <ul>\r\n        {tasks.map((task) => (\r\n          <li key={task.id}>\r\n            <strong>{task.name}</strong> - {task.status}\r\n            <br /> 🗓 **시작일**: {task.startDate} | ⏳ **마감일**: {task.dueDate}\r\n            <button onClick={() => { setEditTask(task); setIsModalOpen(true); }}>수정</button> {/* ✅ 수정 버튼 추가 */}\r\n            <button onClick={() => setSelectedTask(task)} style={{ marginLeft: \"10px\", color: \"blue\" }}>상세 보기</button> {/* ✅ 추가 */}\r\n            <button onClick={() => handleDeleteTask(task.id)} style={{ marginLeft: \"10px\", color: \"red\" }}>삭제</button> {/* ✅ 삭제 버튼 추가 */}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {/* ✅ Task 추가 & 수정 모달 */}\r\n      {isModalOpen && (\r\n        <TaskModal\r\n          onClose={() => setIsModalOpen(false)}\r\n          projectId={projectId}\r\n          refreshTasks={refreshTasks}\r\n          editTask={editTask} // ✅ 수정할 Task 전달\r\n        />\r\n      )}\r\n\r\n      {/* ✅ Task 상세 보기 모달 */}\r\n      {selectedTask && (\r\n        <TaskDetailModal task={selectedTask} onClose={() => setSelectedTask(null)} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}