{"ast":null,"code":"// import React, { useState } from 'react';\n// import '../styles/Chatbox.css';\n// import FileManager from './FileManager';\n// import connectToChat from '../utils/ConnectToChat';\n\n// const Chatbox = () => {\n//   const [messages, setMessages] = useState([\n//     { id: 1, user: 'Alice', content: 'Hello Team!' },\n//     { id: 2, user: 'Bob', content: 'Hi Alice!' },\n//   ]);\n\n//   const [input, setInput] = useState('');\n\n//   const handleSend = () => {\n//     if (input.trim()) {\n//       setMessages([...messages, { id: messages.length + 1, user: 'You', content: input }]);\n//       setInput('');\n//     }\n//   };\n\n//   return (\n//     <div className=\"chatbox\">\n//       <h3>Chat</h3>\n//       <div className=\"messages\">\n//         {messages.map((msg) => (\n//           <p key={msg.id}>\n//             <strong>{msg.user}: </strong>{msg.content}\n//           </p>\n//         ))}\n//       </div>\n//       <div className=\"input-area\">\n//         <input\n//           type=\"text\"\n//           value={input}\n//           onChange={(e) => setInput(e.target.value)}\n//           placeholder=\"Type a message\"\n//         />\n//         <button onClick={handleSend}>Send</button>\n\n//       </div>\n//       <FileManager /> {/* ÌååÏùº Í¥ÄÎ¶¨ Í∏∞Îä• Ï∂îÍ∞Ä */}\n//     </div>\n//   );\n// };\n\n// export default Chatbox;\n\nconst client = new Client({\n  brokerURL: `ws://localhost:8082/ws?secondaryToken=${secondaryToken}`,\n  reconnectDelay: 5000,\n  onConnect: frame => {\n    console.log(\"üü¢ WebSocket Ïó∞Í≤∞ ÏÑ±Í≥µ:\", frame);\n\n    // ‚úÖ Ï±ÑÌåÖÎ∞© Íµ¨ÎèÖ\n    client.subscribe(\"/topic/chat/1\", message => {\n      const receivedMessage = JSON.parse(message.body);\n      setMessages(prevMessages => [...prevMessages, receivedMessage]);\n    });\n    setStompClient(client);\n  },\n  onStompError: frame => {\n    console.error(\"‚õî WebSocket Ïó∞Í≤∞ Ïã§Ìå®:\", frame);\n  }\n});\nclient.activate(); // ‚úÖ WebSocket ÌôúÏÑ±Ìôî","map":{"version":3,"names":["client","Client","brokerURL","secondaryToken","reconnectDelay","onConnect","frame","console","log","subscribe","message","receivedMessage","JSON","parse","body","setMessages","prevMessages","setStompClient","onStompError","error","activate"],"sources":["C:/project2/teamverse-2/src/components/Chatbox.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import '../styles/Chatbox.css';\r\n// import FileManager from './FileManager';\r\n// import connectToChat from '../utils/ConnectToChat';\r\n\r\n\r\n// const Chatbox = () => {\r\n//   const [messages, setMessages] = useState([\r\n//     { id: 1, user: 'Alice', content: 'Hello Team!' },\r\n//     { id: 2, user: 'Bob', content: 'Hi Alice!' },\r\n//   ]);\r\n\r\n//   const [input, setInput] = useState('');\r\n\r\n//   const handleSend = () => {\r\n//     if (input.trim()) {\r\n//       setMessages([...messages, { id: messages.length + 1, user: 'You', content: input }]);\r\n//       setInput('');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"chatbox\">\r\n//       <h3>Chat</h3>\r\n//       <div className=\"messages\">\r\n//         {messages.map((msg) => (\r\n//           <p key={msg.id}>\r\n//             <strong>{msg.user}: </strong>{msg.content}\r\n//           </p>\r\n//         ))}\r\n//       </div>\r\n//       <div className=\"input-area\">\r\n//         <input\r\n//           type=\"text\"\r\n//           value={input}\r\n//           onChange={(e) => setInput(e.target.value)}\r\n//           placeholder=\"Type a message\"\r\n//         />\r\n//         <button onClick={handleSend}>Send</button>\r\n        \r\n//       </div>\r\n//       <FileManager /> {/* ÌååÏùº Í¥ÄÎ¶¨ Í∏∞Îä• Ï∂îÍ∞Ä */}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Chatbox;\r\n\r\n\r\nconst client = new Client({\r\n  brokerURL: `ws://localhost:8082/ws?secondaryToken=${secondaryToken}`,\r\n  reconnectDelay: 5000,\r\n  onConnect: (frame) => {\r\n    console.log(\"üü¢ WebSocket Ïó∞Í≤∞ ÏÑ±Í≥µ:\", frame);\r\n\r\n    // ‚úÖ Ï±ÑÌåÖÎ∞© Íµ¨ÎèÖ\r\n    client.subscribe(\"/topic/chat/1\", (message) => {\r\n      const receivedMessage = JSON.parse(message.body);\r\n      setMessages((prevMessages) => [...prevMessages, receivedMessage]);\r\n    });\r\n\r\n    setStompClient(client);\r\n  },\r\n  onStompError: (frame) => {\r\n    console.error(\"‚õî WebSocket Ïó∞Í≤∞ Ïã§Ìå®:\", frame);\r\n  }\r\n});\r\n\r\nclient.activate(); // ‚úÖ WebSocket ÌôúÏÑ±Ìôî\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,MAAMA,MAAM,GAAG,IAAIC,MAAM,CAAC;EACxBC,SAAS,EAAE,yCAAyCC,cAAc,EAAE;EACpEC,cAAc,EAAE,IAAI;EACpBC,SAAS,EAAGC,KAAK,IAAK;IACpBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,KAAK,CAAC;;IAEzC;IACAN,MAAM,CAACS,SAAS,CAAC,eAAe,EAAGC,OAAO,IAAK;MAC7C,MAAMC,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACI,IAAI,CAAC;MAChDC,WAAW,CAAEC,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEL,eAAe,CAAC,CAAC;IACnE,CAAC,CAAC;IAEFM,cAAc,CAACjB,MAAM,CAAC;EACxB,CAAC;EACDkB,YAAY,EAAGZ,KAAK,IAAK;IACvBC,OAAO,CAACY,KAAK,CAAC,oBAAoB,EAAEb,KAAK,CAAC;EAC5C;AACF,CAAC,CAAC;AAEFN,MAAM,CAACoB,QAAQ,CAAC,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}