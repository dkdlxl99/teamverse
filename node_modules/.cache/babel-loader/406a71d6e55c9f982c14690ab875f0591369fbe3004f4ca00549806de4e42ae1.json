{"ast":null,"code":"var _jsxFileName = \"/Users/woo/Documents/git_local/react/0213/src/components/Chatbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { getAccessToken } from \"../utils/authUtils\";\nimport { useParams } from \"react-router-dom\"; // ✅ URL에서 projectId 가져오기\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbox = () => {\n  _s();\n  const {\n    projectId\n  } = useParams(); // ✅ 현재 프로젝트 ID 가져오기\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  // ✅ 채팅 메시지 불러오기 함수\n  const fetchChatMessages = async () => {\n    if (!projectId) {\n      console.error(\"❌ 프로젝트 ID가 정의되지 않음!\");\n      return;\n    }\n    const token = getAccessToken();\n    try {\n      const response = await axios.get(`http://localhost:8082/api/chat/${projectId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessages(response.data);\n      console.log(\"✅ 채팅 메시지 로드 성공:\", response.data);\n    } catch (error) {\n      console.error(\"❌ 채팅 기록 불러오기 실패:\", error);\n    }\n  };\n\n  // ✅ 페이지 로드 시 채팅 내역 불러오기\n  useEffect(() => {\n    fetchChatMessages();\n  }, [projectId]); // ✅ projectId 변경 시 다시 불러오기\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbox-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD300 \\uCC44\\uD305\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: msg.sender.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 27\n        }, this), \": \", msg.content]\n      }, msg.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newMessage,\n      onChange: e => setNewMessage(e.target.value),\n      placeholder: \"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"\\uC804\\uC1A1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbox, \"yNjynpsALFA2zk6F/v/u6YmpJ2A=\", false, function () {\n  return [useParams];\n});\n_c = Chatbox;\nexport default Chatbox;\nvar _c;\n$RefreshReg$(_c, \"Chatbox\");","map":{"version":3,"names":["React","useState","useEffect","axios","getAccessToken","useParams","jsxDEV","_jsxDEV","Chatbox","_s","projectId","messages","setMessages","newMessage","setNewMessage","fetchChatMessages","console","error","token","response","get","headers","Authorization","data","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","sender","username","content","id","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/woo/Documents/git_local/react/0213/src/components/Chatbox.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { getAccessToken } from \"../utils/authUtils\";\nimport { useParams } from \"react-router-dom\"; // ✅ URL에서 projectId 가져오기\n\nconst Chatbox = () => {\n  const { projectId } = useParams(); // ✅ 현재 프로젝트 ID 가져오기\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  // ✅ 채팅 메시지 불러오기 함수\n  const fetchChatMessages = async () => {\n    if (!projectId) {\n      console.error(\"❌ 프로젝트 ID가 정의되지 않음!\");\n      return;\n    }\n\n    const token = getAccessToken();\n    try {\n      const response = await axios.get(`http://localhost:8082/api/chat/${projectId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setMessages(response.data);\n      console.log(\"✅ 채팅 메시지 로드 성공:\", response.data);\n    } catch (error) {\n      console.error(\"❌ 채팅 기록 불러오기 실패:\", error);\n    }\n  };\n\n  // ✅ 페이지 로드 시 채팅 내역 불러오기\n  useEffect(() => {\n    fetchChatMessages();\n  }, [projectId]); // ✅ projectId 변경 시 다시 불러오기\n\n  return (\n    <div className=\"chatbox-container\">\n      <h3>팀 채팅</h3>\n      <div className=\"messages\">\n        {messages.map((msg) => (\n          <p key={msg.id}><strong>{msg.sender.username}</strong>: {msg.content}</p>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        value={newMessage}\n        onChange={(e) => setNewMessage(e.target.value)}\n        placeholder=\"메시지를 입력하세요...\"\n      />\n      <button>전송</button>\n    </div>\n  );\n};\n\nexport default Chatbox;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}