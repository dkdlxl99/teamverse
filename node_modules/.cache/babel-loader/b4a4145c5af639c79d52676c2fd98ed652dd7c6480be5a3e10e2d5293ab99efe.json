{"ast":null,"code":"var _jsxFileName = \"/Users/woo/Documents/git_local/react/0213/src/components/InviteList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { getAccessToken } from \"../utils/authUtils\";\nimport { stompClient } from \"../api/websocket\";\nimport \"../styles/InviteList.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InviteList = ({\n  refreshProjects\n}) => {\n  _s();\n  const [invites, setInvites] = useState([]);\n  const [notifications, setNotifications] = useState([]);\n  useEffect(() => {\n    const fetchInvites = async () => {\n      const token = getAccessToken();\n      try {\n        const response = await axios.get(\"http://localhost:8082/api/team/invites\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"📌 받은 초대 목록:\", response.data);\n        setInvites(response.data);\n        setNotifications(response.data.filter(invite => invite.status === \"PENDING\"));\n      } catch (error) {\n        console.error(\"❌ 초대 목록 불러오기 실패:\", error);\n      }\n    };\n    fetchInvites();\n    stompClient.onConnect = frame => {\n      console.log(\"✅ WebSocket 연결 성공:\", frame);\n      stompClient.subscribe(\"/topic/invites\", message => {\n        console.log(\"📩 새 초대 알림 수신:\", message.body);\n        const newInvite = JSON.parse(message.body);\n        if (newInvite.status === \"PENDING\") {\n          setNotifications(prev => [...prev, newInvite]);\n        }\n      });\n    };\n    stompClient.activate();\n    return () => {\n      stompClient.deactivate();\n    };\n  }, []);\n\n  // ✅ \"확인\" 버튼 클릭 시 실행될 함수\n  const handleAcceptInvite = async inviteId => {\n    let token = getAccessToken();\n    if (!token) {\n      alert(\"로그인이 필요합니다.\");\n      navigate(\"/login\");\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:8082/api/team/accept-invite/${inviteId}`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(`✅ 초대 ${inviteId} 수락됨`);\n      setNotifications(prev => prev.filter(n => n.id !== inviteId));\n      setInvites(prev => prev.filter(i => i.id !== inviteId));\n      console.log(\"🔄 프로젝트 목록 갱신 요청 실행\");\n      refreshProjects(); // ✅ 프로젝트 목록 갱신\n    } catch (error) {\n      var _error$response;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        console.warn(\"🔄 토큰 만료 감지, 새 토큰 요청...\");\n        token = await refreshAccessToken(); // 🔹 새로운 액세스 토큰 요청\n        if (!token) {\n          alert(\"세션이 만료되었습니다. 다시 로그인해주세요.\");\n          navigate(\"/login\");\n          return;\n        }\n\n        // 🔹 새로운 토큰으로 다시 요청\n        try {\n          const response = await axios.post(`http://localhost:8082/api/team/accept-invite/${inviteId}`, {}, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          console.log(`✅ 초대 ${inviteId} 재시도 후 수락됨`);\n          setNotifications(prev => prev.filter(n => n.id !== inviteId));\n          setInvites(prev => prev.filter(i => i.id !== inviteId));\n          console.log(\"🔄 프로젝트 목록 갱신 요청 실행\");\n          refreshProjects();\n        } catch (retryError) {\n          console.error(`🚨 재시도 후에도 초대 수락 실패: ${inviteId}`, retryError);\n        }\n      } else {\n        console.error(`🚨 초대 수락 실패: ${inviteId}`, error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invite-popup-container\",\n      children: notifications.length > 0 ? notifications.map(invite => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invite-popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: invite.sender.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 33\n          }, this), \" \\uB2D8\\uC774 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: invite.project.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 78\n          }, this), \" \\uD504\\uB85C\\uC81D\\uD2B8\\uC5D0 \\uCD08\\uB300\\uD588\\uC2B5\\uB2C8\\uB2E4.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAcceptInvite(invite.id),\n          children: \"\\u2705 \\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }, this)]\n      }, invite.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-invites\",\n        children: \"\\uD83D\\uDCCC \\uC0C8\\uB85C\\uC6B4 \\uCD08\\uB300\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(InviteList, \"qofzwyZStL3JyY8l33+1oaHthL8=\");\n_c = InviteList;\nexport default InviteList;\nvar _c;\n$RefreshReg$(_c, \"InviteList\");","map":{"version":3,"names":["React","useEffect","useState","axios","getAccessToken","stompClient","jsxDEV","_jsxDEV","Fragment","_Fragment","InviteList","refreshProjects","_s","invites","setInvites","notifications","setNotifications","fetchInvites","token","response","get","headers","Authorization","console","log","data","filter","invite","status","error","onConnect","frame","subscribe","message","body","newInvite","JSON","parse","prev","activate","deactivate","handleAcceptInvite","inviteId","alert","navigate","post","n","id","i","_error$response","warn","refreshAccessToken","retryError","children","className","length","map","sender","username","fileName","_jsxFileName","lineNumber","columnNumber","project","name","onClick","_c","$RefreshReg$"],"sources":["/Users/woo/Documents/git_local/react/0213/src/components/InviteList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { getAccessToken } from \"../utils/authUtils\";\nimport { stompClient } from \"../api/websocket\";\nimport \"../styles/InviteList.css\";\n\nconst InviteList = ({ refreshProjects }) => {\n    const [invites, setInvites] = useState([]);\n    const [notifications, setNotifications] = useState([]);\n\n    useEffect(() => {\n        const fetchInvites = async () => {\n            const token = getAccessToken();\n            try {\n                const response = await axios.get(\"http://localhost:8082/api/team/invites\", {\n                    headers: { Authorization: `Bearer ${token}` },\n                });\n                console.log(\"📌 받은 초대 목록:\", response.data);\n                setInvites(response.data);\n                setNotifications(response.data.filter(invite => invite.status === \"PENDING\"));\n            } catch (error) {\n                console.error(\"❌ 초대 목록 불러오기 실패:\", error);\n            }\n        };\n\n        fetchInvites();\n\n        stompClient.onConnect = (frame) => {\n            console.log(\"✅ WebSocket 연결 성공:\", frame);\n            stompClient.subscribe(\"/topic/invites\", (message) => {\n                console.log(\"📩 새 초대 알림 수신:\", message.body);\n                const newInvite = JSON.parse(message.body);\n\n                if (newInvite.status === \"PENDING\") {\n                    setNotifications((prev) => [...prev, newInvite]);\n                }\n            });\n        };\n\n        stompClient.activate();\n\n        return () => {\n            stompClient.deactivate();\n        };\n    }, []);\n\n    // ✅ \"확인\" 버튼 클릭 시 실행될 함수\n    const handleAcceptInvite = async (inviteId) => {\n      let token = getAccessToken();\n      if (!token) {\n          alert(\"로그인이 필요합니다.\");\n          navigate(\"/login\");\n          return;\n      }\n  \n      try {\n          const response = await axios.post(\n              `http://localhost:8082/api/team/accept-invite/${inviteId}`, \n              {}, \n              {\n                  headers: { Authorization: `Bearer ${token}` },\n              }\n          );\n  \n          console.log(`✅ 초대 ${inviteId} 수락됨`);\n  \n          setNotifications((prev) => prev.filter(n => n.id !== inviteId));\n          setInvites((prev) => prev.filter(i => i.id !== inviteId));\n  \n          console.log(\"🔄 프로젝트 목록 갱신 요청 실행\");\n          refreshProjects(); // ✅ 프로젝트 목록 갱신\n      } catch (error) {\n          if (error.response?.status === 401) {\n              console.warn(\"🔄 토큰 만료 감지, 새 토큰 요청...\");\n              token = await refreshAccessToken(); // 🔹 새로운 액세스 토큰 요청\n              if (!token) {\n                  alert(\"세션이 만료되었습니다. 다시 로그인해주세요.\");\n                  navigate(\"/login\");\n                  return;\n              }\n  \n              // 🔹 새로운 토큰으로 다시 요청\n              try {\n                  const response = await axios.post(\n                      `http://localhost:8082/api/team/accept-invite/${inviteId}`, \n                      {}, \n                      {\n                          headers: { Authorization: `Bearer ${token}` },\n                      }\n                  );\n                  console.log(`✅ 초대 ${inviteId} 재시도 후 수락됨`);\n  \n                  setNotifications((prev) => prev.filter(n => n.id !== inviteId));\n                  setInvites((prev) => prev.filter(i => i.id !== inviteId));\n  \n                  console.log(\"🔄 프로젝트 목록 갱신 요청 실행\");\n                  refreshProjects();\n              } catch (retryError) {\n                  console.error(`🚨 재시도 후에도 초대 수락 실패: ${inviteId}`, retryError);\n              }\n          } else {\n              console.error(`🚨 초대 수락 실패: ${inviteId}`, error);\n          }\n      }\n  };\n  \n  \n\n    return (\n        <>\n            <div className=\"invite-popup-container\">\n                {notifications.length > 0 ? (\n                    notifications.map((invite) => (\n                        <div key={invite.id} className=\"invite-popup\">\n                            <p>\n                                <strong>{invite.sender.username}</strong> 님이 <strong>{invite.project.name}</strong> 프로젝트에 초대했습니다.\n                            </p>\n                            <button onClick={() => handleAcceptInvite(invite.id)}>\n                                ✅ 확인\n                            </button>\n                        </div>\n                    ))\n                ) : (\n                    <p className=\"no-invites\">📌 새로운 초대가 없습니다.</p>\n                )}\n            </div>\n        </>\n    );\n};\n\nexport default InviteList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}