{"ast":null,"code":"var _jsxFileName = \"C:\\\\project2\\\\teamverse-2\\\\src\\\\components\\\\Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { logoutUser, getUserInfo } from \"../api/authApi\"; // ✅ 로그인 정보 요청 추가\nimport \"../styles/Navbar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // ✅ 로그인 상태를 useState로 관리\n\n  // 서버에서 로그인 상태 확인\n  const fetchUserInfo = async () => {\n    const userInfo = await getUserInfo(); // ✅ 서버에서 로그인 정보 가져오기\n    setIsLoggedIn(!!userInfo); // ✅ 로그인 상태 업데이트\n  };\n  useEffect(() => {\n    fetchUserInfo(); // ✅ 로그인 상태 확인\n\n    // ✅ 로그인 후 상태가 자동으로 업데이트되도록 5초마다 확인\n    const interval = setInterval(() => {\n      fetchUserInfo();\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  const handleLogout = async () => {\n    await logoutUser();\n    setIsLoggedIn(false); // ✅ 상태 업데이트\n    window.location.href = \"/login\"; // ✅ 로그아웃 후 로그인 페이지로 이동\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-logo\",\n      children: \"TeamVerse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-links\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/statistics\",\n        children: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/team-status\",\n        children: \"Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/settings\",\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"logout-btn\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        className: \"login-btn\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useEffect","useState","Link","logoutUser","getUserInfo","jsxDEV","_jsxDEV","Navbar","_s","isLoggedIn","setIsLoggedIn","fetchUserInfo","userInfo","interval","setInterval","clearInterval","handleLogout","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","_c","$RefreshReg$"],"sources":["C:/project2/teamverse-2/src/components/Navbar.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { logoutUser, getUserInfo } from \"../api/authApi\"; // ✅ 로그인 정보 요청 추가\r\nimport \"../styles/Navbar.css\";\r\n\r\nconst Navbar = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // ✅ 로그인 상태를 useState로 관리\r\n\r\n   // 서버에서 로그인 상태 확인\r\n   const fetchUserInfo = async () => {\r\n    const userInfo = await getUserInfo(); // ✅ 서버에서 로그인 정보 가져오기\r\n    setIsLoggedIn(!!userInfo); // ✅ 로그인 상태 업데이트\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUserInfo(); // ✅ 로그인 상태 확인\r\n\r\n    // ✅ 로그인 후 상태가 자동으로 업데이트되도록 5초마다 확인\r\n    const interval = setInterval(() => {\r\n      fetchUserInfo();\r\n    }, 5000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const handleLogout = async () => {\r\n    await logoutUser();\r\n    setIsLoggedIn(false); // ✅ 상태 업데이트\r\n    window.location.href = \"/login\"; // ✅ 로그아웃 후 로그인 페이지로 이동\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"navbar-logo\">TeamVerse</div>\r\n      <div className=\"navbar-links\">\r\n        <Link to=\"/\">Dashboard</Link>\r\n        <Link to=\"/statistics\">Statistics</Link>\r\n        <Link to=\"/team-status\">Team</Link>\r\n        <Link to=\"/settings\">Settings</Link>\r\n\r\n        {/* ✅ 로그인 상태에 따라 버튼 변경 */}\r\n        {isLoggedIn ? (\r\n          <button onClick={handleLogout} className=\"logout-btn\">Logout</button>\r\n        ) : (\r\n          <Link to=\"/login\" className=\"login-btn\">Login</Link>\r\n        )}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}