{"ast":null,"code":"import { Client } from \"@stomp/stompjs\";\nlet stompClient = null;\nexport const getStompClient = () => {\n  if (!stompClient) {\n    stompClient = new Client({\n      brokerURL: \"ws://localhost:8082/ws\",\n      connectHeaders: {\n        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n      },\n      debug: msg => console.log(\"üìå STOMP Debug:\", msg),\n      reconnectDelay: 5000,\n      // ‚úÖ 5Ï¥à ÌõÑ ÏûêÎèô Ïû¨Ïó∞Í≤∞\n      heartbeatIncoming: 4000,\n      heartbeatOutgoing: 4000\n    });\n    stompClient.onConnect = () => {\n      console.log(\"‚úÖ WebSocket Ïó∞Í≤∞ ÏÑ±Í≥µ!\");\n    };\n    stompClient.onStompError = frame => {\n      console.error(\"üö® STOMP Ïò§Î•ò Î∞úÏÉù:\", frame.headers[\"message\"]);\n    };\n    stompClient.onWebSocketError = error => {\n      console.error(\"üö® WebSocket Ïó∞Í≤∞ Ïò§Î•ò:\", error);\n    };\n    stompClient.onDisconnect = () => {\n      console.warn(\"‚ö†Ô∏è WebSocket Ïó∞Í≤∞ Ï¢ÖÎ£åÎê®!\");\n    };\n  }\n  return stompClient;\n};","map":{"version":3,"names":["Client","stompClient","getStompClient","brokerURL","connectHeaders","Authorization","localStorage","getItem","debug","msg","console","log","reconnectDelay","heartbeatIncoming","heartbeatOutgoing","onConnect","onStompError","frame","error","headers","onWebSocketError","onDisconnect","warn"],"sources":["/Users/woo/Documents/git_local/react/0213/src/api/websocket.js"],"sourcesContent":["import { Client } from \"@stomp/stompjs\";\n\nlet stompClient = null;\n\nexport const getStompClient = () => {\n    if (!stompClient) {\n        stompClient = new Client({\n            brokerURL: \"ws://localhost:8082/ws\",\n            connectHeaders: {\n                Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n            },\n            debug: (msg) => console.log(\"üìå STOMP Debug:\", msg),\n            reconnectDelay: 5000, // ‚úÖ 5Ï¥à ÌõÑ ÏûêÎèô Ïû¨Ïó∞Í≤∞\n            heartbeatIncoming: 4000,\n            heartbeatOutgoing: 4000,\n        });\n\n        stompClient.onConnect = () => {\n            console.log(\"‚úÖ WebSocket Ïó∞Í≤∞ ÏÑ±Í≥µ!\");\n        };\n\n        stompClient.onStompError = (frame) => {\n            console.error(\"üö® STOMP Ïò§Î•ò Î∞úÏÉù:\", frame.headers[\"message\"]);\n        };\n\n        stompClient.onWebSocketError = (error) => {\n            console.error(\"üö® WebSocket Ïó∞Í≤∞ Ïò§Î•ò:\", error);\n        };\n\n        stompClient.onDisconnect = () => {\n            console.warn(\"‚ö†Ô∏è WebSocket Ïó∞Í≤∞ Ï¢ÖÎ£åÎê®!\");\n        };\n    }\n    \n    return stompClient;\n};\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,gBAAgB;AAEvC,IAAIC,WAAW,GAAG,IAAI;AAEtB,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAChC,IAAI,CAACD,WAAW,EAAE;IACdA,WAAW,GAAG,IAAID,MAAM,CAAC;MACrBG,SAAS,EAAE,wBAAwB;MACnCC,cAAc,EAAE;QACZC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MAChE,CAAC;MACDC,KAAK,EAAGC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,GAAG,CAAC;MACnDG,cAAc,EAAE,IAAI;MAAE;MACtBC,iBAAiB,EAAE,IAAI;MACvBC,iBAAiB,EAAE;IACvB,CAAC,CAAC;IAEFb,WAAW,CAACc,SAAS,GAAG,MAAM;MAC1BL,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACrC,CAAC;IAEDV,WAAW,CAACe,YAAY,GAAIC,KAAK,IAAK;MAClCP,OAAO,CAACQ,KAAK,CAAC,iBAAiB,EAAED,KAAK,CAACE,OAAO,CAAC,SAAS,CAAC,CAAC;IAC9D,CAAC;IAEDlB,WAAW,CAACmB,gBAAgB,GAAIF,KAAK,IAAK;MACtCR,OAAO,CAACQ,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC/C,CAAC;IAEDjB,WAAW,CAACoB,YAAY,GAAG,MAAM;MAC7BX,OAAO,CAACY,IAAI,CAAC,sBAAsB,CAAC;IACxC,CAAC;EACL;EAEA,OAAOrB,WAAW;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}