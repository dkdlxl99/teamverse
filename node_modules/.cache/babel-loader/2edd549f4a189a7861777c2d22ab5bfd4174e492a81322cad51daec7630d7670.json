{"ast":null,"code":"var _jsxFileName = \"C:\\\\project2\\\\teamverse-2-boot,react - \\uC791\\uC5C5\\\\src\\\\components\\\\GanttChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../styles/GanttChart.css';\n\n// 파스텔 톤 색상 생성 함수\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst generatePastelColor = () => {\n  const r = Math.floor(Math.random() * 127 + 127); // 127~254\n  const g = Math.floor(Math.random() * 127 + 127); // 127~254\n  const b = Math.floor(Math.random() * 127 + 127); // 127~254\n  return `rgb(${r}, ${g}, ${b})`;\n};\nconst GanttChart = ({\n  project\n}) => {\n  _s();\n  const initialTasks = [{\n    id: 1,\n    name: 'Design Phase',\n    start: new Date(2025, 1, 5),\n    end: new Date(2025, 1, 8),\n    progress: 100\n  }, {\n    id: 2,\n    name: 'Development Phase',\n    start: new Date(2025, 1, 5),\n    end: new Date(2025, 1, 9),\n    progress: 75\n  }, {\n    id: 3,\n    name: 'Testing Phase',\n    start: new Date(2025, 1, 5),\n    end: new Date(2025, 1, 10),\n    progress: 30\n  }];\n  const [tasks, setTasks] = useState([]);\n  const [dependencies, setDependencies] = useState([]); // 작업 간 의존성 저장\n  const [viewMode, setViewMode] = useState('week'); // 현재 보기 모드 (week, month, year)\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\n  const today = new Date();\n  useEffect(() => {\n    if (!project) {\n      setTasks([]); // ✅ 프로젝트 없을 경우 빈 상태 유지\n      return;\n    }\n    console.log(\"📌 선택된 프로젝트:\", project.name); // ✅ 콘솔에서 프로젝트 이름 확인\n    fetchTasks(project.id); // 추가: 백엔드에서 작업 목록 불러오기\n  }, [project]);\n\n  // ✅ 백엔드에서 작업 목록 불러오기\n  const fetchTasks = async projectId => {\n    try {\n      const response = await axios.get(`http://localhost:8082/api/user/projects/${projectId}/tasks`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('accessToken')}`\n        },\n        withCredentials: true\n      });\n\n      // 수정: 백엔드에서 가져온 데이터를 tasks 상태에 저장\n      const fetchedTasks = response.data.map(task => ({\n        ...task,\n        color: generatePastelColor() // ✅ 새롭게 색상 추가\n      }));\n      setTasks(fetchedTasks);\n    } catch (error) {\n      console.error(\"❌ 작업 목록을 불러오는 중 오류 발생:\", error);\n    }\n  };\n\n  // ✅ 특정 작업의 의존성(Task Dependency) 불러오기\n  const fetchDependencies = async taskId => {\n    try {\n      const response = await axios.get(`http://localhost:8082/api/user/tasks/dependencies/${taskId}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('accessToken')}`\n        },\n        withCredentials: true\n      });\n      setDependencies(response.data); // 추가: 작업 간 의존성 정보 업데이트\n    } catch (error) {\n      console.error(\"❌ 의존성 데이터를 불러오는 중 오류 발생:\", error);\n    }\n  };\n\n  //   const savedColors = JSON.parse(localStorage.getItem('taskColors')) || {};\n  //   const tasksWithColors = initialTasks.map((task) => ({\n  //     ...task,\n  //     color: savedColors[task.id] || generatePastelColor(),\n  //   }));\n\n  //   const newColors = tasksWithColors.reduce((acc, task) => {\n  //     if (!savedColors[task.id]) {\n  //       acc[task.id] = task.color;\n  //     }\n  //     return acc;\n  //   }, {});\n  //   localStorage.setItem('taskColors', JSON.stringify({ ...savedColors, ...newColors }));\n\n  //   setTasks(tasksWithColors);\n  // },[project]);\n\n  const getWeekDates = () => {\n    const today = new Date();\n    const firstDayOfWeek = today.getDate() - today.getDay();\n    return Array.from({\n      length: 7\n    }, (_, i) => {\n      const date = new Date(today.getFullYear(), today.getMonth(), firstDayOfWeek + i);\n      return {\n        day: date.toLocaleDateString('en-US', {\n          weekday: 'short'\n        }),\n        date: new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0)\n      };\n    });\n  };\n  const getMonthDates = () => {\n    const firstDayOfMonth = new Date(currentMonth.getFullYear(), currentMonth.getMonth(), 1);\n    const lastDayOfMonth = new Date(currentMonth.getFullYear(), currentMonth.getMonth() + 1, 0);\n    const dates = [];\n\n    // 첫 주 빈 칸\n    for (let i = 0; i < firstDayOfMonth.getDay(); i++) {\n      dates.push(null);\n    }\n\n    // 해당 월의 모든 날짜\n    for (let i = 1; i <= lastDayOfMonth.getDate(); i++) {\n      const date = new Date(currentMonth.getFullYear(), currentMonth.getMonth(), i);\n      dates.push(date);\n    }\n    return dates;\n  };\n  const handlePreviousMonth = () => {\n    setCurrentMonth(new Date(currentMonth.getFullYear(), currentMonth.getMonth() - 1, 1));\n  };\n  const handleNextMonth = () => {\n    setCurrentMonth(new Date(currentMonth.getFullYear(), currentMonth.getMonth() + 1, 1));\n  };\n  const getYearMonths = () => {\n    return Array.from({\n      length: 12\n    }, (_, index) => {\n      const monthDate = new Date(currentYear, index, 1);\n      return {\n        name: monthDate.toLocaleDateString('en-US', {\n          month: 'short'\n        }).toUpperCase(),\n        date: monthDate\n      };\n    });\n  };\n  const isToday = date => {\n    // date가 유효한 경우에만 체크\n    return date && today.getFullYear() === date.getFullYear() && today.getMonth() === date.getMonth() && today.getDate() === date.getDate();\n  };\n  const weekDates = getWeekDates();\n  const monthDates = getMonthDates();\n  const yearMonths = getYearMonths();\n  const handlePreviousYear = () => {\n    setCurrentYear(prevYear => prevYear - 1);\n  };\n  const handleNextYear = () => {\n    setCurrentYear(prevYear => prevYear + 1);\n  };\n  const isTaskInMonth = (monthDate, task) => {\n    const monthStart = new Date(monthDate.getFullYear(), monthDate.getMonth(), 1);\n    const monthEnd = new Date(monthDate.getFullYear(), monthDate.getMonth() + 1, 0);\n    return task.start <= monthEnd && task.end >= monthStart;\n  };\n  const isTodayInMonth = monthDate => {\n    return today.getFullYear() === monthDate.getFullYear() && today.getMonth() === monthDate.getMonth();\n  };\n  const isTaskOnDate = (date, task) => {\n    return date >= task.start && date <= task.end;\n  };\n  const calculateProgressBarStyle = task => {\n    const weekStart = weekDates[0].date.getTime();\n    const weekEnd = weekDates[6].date.getTime() + 24 * 60 * 60 * 1000 - 1;\n    const taskStart = Math.max(task.start.getTime(), weekStart);\n    const taskEnd = Math.min(task.end.getTime() + 24 * 60 * 60 * 1000 - 1, weekEnd);\n    if (taskEnd < weekStart || taskStart > weekEnd) {\n      return {\n        display: 'none'\n      };\n    }\n    const totalWeekMs = weekEnd - weekStart + 1;\n    const offset = (taskStart - weekStart) / totalWeekMs * 100;\n    const width = (taskEnd - taskStart) / totalWeekMs * 100;\n    return {\n      left: `${offset}%`,\n      width: `${width}%`\n    };\n  };\n  const ProgressBar = ({\n    task,\n    progressBarStyle\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      style: progressBarStyle,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        style: {\n          width: `${task.progress}%`,\n          backgroundColor: task.color\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"task-name\",\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gantt-chart\",\n    children: [project ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"project-title\",\n        children: [\"\\uD83D\\uDCCC \", project.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD504\\uB85C\\uC81D\\uD2B8 \\uC2DC\\uC791\\uC77C: \", project.startDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD604\\uC7AC \\uC120\\uD0DD\\uB41C \\uD504\\uB85C\\uC81D\\uD2B8\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-container\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"task-name\",\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fetchDependencies(task.id),\n          children: \"\\uD83D\\uDD17 \\uC758\\uC874\\uC131 \\uBCF4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dependencies\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC791\\uC5C5 \\uAC04 \\uC758\\uC874\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: dependencies.map(dep => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uC791\\uC5C5 \", dep.task.id, \" \\u2192 \\uC885\\uC18D \\uC791\\uC5C5 \", dep.dependentTask.id]\n        }, dep.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n};\n_s(GanttChart, \"iNyaTQZD9tNyJSJtw+SUaN8qW7s=\");\n_c = GanttChart;\n{\n  viewMode === 'week' && /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar\",\n      children: weekDates.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `calendar-day ${isToday(day.date) ? 'today' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day-name\",\n          children: [day.day, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-date\",\n            children: day.date.toLocaleDateString('en-US', {\n              day: 'numeric',\n              month: 'short'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-container\",\n      children: tasks.map(task => {\n        const progressBarStyle = calculateProgressBarStyle(task);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task\",\n          children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n            task: task,\n            progressBarStyle: progressBarStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 19\n          }, this)\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n{\n  viewMode === 'month' && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"month-calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"month-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"month-nav\",\n        onClick: handlePreviousMonth,\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"month-title\",\n        children: currentMonth.toLocaleDateString('en-US', {\n          month: 'long',\n          year: 'numeric'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"month-nav\",\n        onClick: handleNextMonth,\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-grid\",\n      children: [['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-day-name\",\n        children: day\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 15\n      }, this)), monthDates.map((date, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `calendar-day ${date && isToday(date) ? 'today' : ''}`,\n        children: date && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-date\",\n            children: date.getDate()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-indicator-container\",\n            children: tasks.map(task => isTaskOnDate(date, task) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-indicator task-bar\" // 막대 모양\n              ,\n              style: {\n                backgroundColor: task.color\n              }\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 9\n  }, this);\n}\n{\n  viewMode === 'year' && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"year-calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"year-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"year-nav\",\n        onClick: handlePreviousYear,\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"year-title\",\n        children: currentYear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"year-nav\",\n        onClick: handleNextYear,\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"year-grid\",\n      children: yearMonths.map((month, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"year-month\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `month-name ${isTodayInMonth(month.date) ? 'today' : ''}`,\n          children: month.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"month-tasks\",\n          children: tasks.map(task => isTaskInMonth(month.date, task) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-indicator task-circle\",\n            style: {\n              backgroundColor: task.color\n            }\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 317,\n    columnNumber: 9\n  }, this);\n}\n/*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"view-mode-buttons\",\n  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n    className: `view-button ${viewMode === 'week' ? 'active' : ''}`,\n    onClick: () => setViewMode('week'),\n    children: \"Week\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 351,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `view-button ${viewMode === 'month' ? 'active' : ''}`,\n    onClick: () => setViewMode('month'),\n    children: \"Month\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 357,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `view-button ${viewMode === 'year' ? 'active' : ''}`,\n    onClick: () => setViewMode('year'),\n    children: \"Year\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 363,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 350,\n  columnNumber: 7\n}, this);\n//     </div>\n//   );\n// };\n\nexport default GanttChart;\nvar _c;\n$RefreshReg$(_c, \"GanttChart\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","generatePastelColor","r","Math","floor","random","g","b","GanttChart","project","_s","initialTasks","id","name","start","Date","end","progress","tasks","setTasks","dependencies","setDependencies","viewMode","setViewMode","currentMonth","setCurrentMonth","currentYear","setCurrentYear","getFullYear","today","console","log","fetchTasks","projectId","response","get","headers","Authorization","localStorage","getItem","withCredentials","fetchedTasks","data","map","task","color","error","fetchDependencies","taskId","getWeekDates","firstDayOfWeek","getDate","getDay","Array","from","length","_","i","date","getMonth","day","toLocaleDateString","weekday","getMonthDates","firstDayOfMonth","lastDayOfMonth","dates","push","handlePreviousMonth","handleNextMonth","getYearMonths","index","monthDate","month","toUpperCase","isToday","weekDates","monthDates","yearMonths","handlePreviousYear","prevYear","handleNextYear","isTaskInMonth","monthStart","monthEnd","isTodayInMonth","isTaskOnDate","calculateProgressBarStyle","weekStart","getTime","weekEnd","taskStart","max","taskEnd","min","display","totalWeekMs","offset","width","left","ProgressBar","progressBarStyle","className","style","children","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","startDate","onClick","dep","dependentTask","_c","year","$RefreshReg$"],"sources":["C:/project2/teamverse-2-boot,react - 작업/src/components/GanttChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../styles/GanttChart.css';\r\n\r\n// 파스텔 톤 색상 생성 함수\r\nconst generatePastelColor = () => {\r\n  const r = Math.floor((Math.random() * 127) + 127); // 127~254\r\n  const g = Math.floor((Math.random() * 127) + 127); // 127~254\r\n  const b = Math.floor((Math.random() * 127) + 127); // 127~254\r\n  return `rgb(${r}, ${g}, ${b})`;\r\n};\r\n\r\nconst GanttChart = ({ project }) => {\r\n  const initialTasks = [\r\n    { id: 1, name: 'Design Phase', start: new Date(2025, 1, 5), end: new Date(2025, 1, 8), progress: 100 },\r\n    { id: 2, name: 'Development Phase', start: new Date(2025, 1, 5), end: new Date(2025, 1, 9), progress: 75 },\r\n    { id: 3, name: 'Testing Phase', start: new Date(2025, 1, 5), end: new Date(2025, 1, 10), progress: 30 },\r\n  ];\r\n\r\n  const [tasks, setTasks] = useState([]);\r\n  const [dependencies, setDependencies] = useState([]);// 작업 간 의존성 저장\r\n  const [viewMode, setViewMode] = useState('week'); // 현재 보기 모드 (week, month, year)\r\n  const [currentMonth, setCurrentMonth] = useState(new Date());\r\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\r\n  const today = new Date();\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (!project) {\r\n      setTasks([]); // ✅ 프로젝트 없을 경우 빈 상태 유지\r\n      return;\r\n    }\r\n\r\n    console.log(\"📌 선택된 프로젝트:\", project.name); // ✅ 콘솔에서 프로젝트 이름 확인\r\n    fetchTasks(project.id); // 추가: 백엔드에서 작업 목록 불러오기\r\n  }, [project]);\r\n\r\n  // ✅ 백엔드에서 작업 목록 불러오기\r\n  const fetchTasks = async (projectId) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8082/api/user/projects/${projectId}/tasks`, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('accessToken')}` },\r\n        withCredentials: true,\r\n      });\r\n\r\n      // 수정: 백엔드에서 가져온 데이터를 tasks 상태에 저장\r\n      const fetchedTasks = response.data.map(task => ({\r\n        ...task,\r\n        color: generatePastelColor(), // ✅ 새롭게 색상 추가\r\n      }));\r\n\r\n      setTasks(fetchedTasks);\r\n    } catch (error) {\r\n      console.error(\"❌ 작업 목록을 불러오는 중 오류 발생:\", error);\r\n    }\r\n  };\r\n\r\n  // ✅ 특정 작업의 의존성(Task Dependency) 불러오기\r\n  const fetchDependencies = async (taskId) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8082/api/user/tasks/dependencies/${taskId}`, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('accessToken')}` },\r\n        withCredentials: true,\r\n      });\r\n\r\n      setDependencies(response.data); // 추가: 작업 간 의존성 정보 업데이트\r\n    } catch (error) {\r\n      console.error(\"❌ 의존성 데이터를 불러오는 중 오류 발생:\", error);\r\n    }\r\n  };\r\n\r\n  //   const savedColors = JSON.parse(localStorage.getItem('taskColors')) || {};\r\n  //   const tasksWithColors = initialTasks.map((task) => ({\r\n  //     ...task,\r\n  //     color: savedColors[task.id] || generatePastelColor(),\r\n  //   }));\r\n\r\n  //   const newColors = tasksWithColors.reduce((acc, task) => {\r\n  //     if (!savedColors[task.id]) {\r\n  //       acc[task.id] = task.color;\r\n  //     }\r\n  //     return acc;\r\n  //   }, {});\r\n  //   localStorage.setItem('taskColors', JSON.stringify({ ...savedColors, ...newColors }));\r\n\r\n  //   setTasks(tasksWithColors);\r\n  // },[project]);\r\n\r\n\r\n\r\n  const getWeekDates = () => {\r\n    const today = new Date();\r\n    const firstDayOfWeek = today.getDate() - today.getDay();\r\n    return Array.from({ length: 7 }, (_, i) => {\r\n      const date = new Date(today.getFullYear(), today.getMonth(), firstDayOfWeek + i);\r\n      return {\r\n        day: date.toLocaleDateString('en-US', { weekday: 'short' }),\r\n        date: new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0),\r\n      };\r\n    });\r\n  };\r\n\r\n  const getMonthDates = () => {\r\n    const firstDayOfMonth = new Date(currentMonth.getFullYear(), currentMonth.getMonth(), 1);\r\n    const lastDayOfMonth = new Date(currentMonth.getFullYear(), currentMonth.getMonth() + 1, 0);\r\n    const dates = [];\r\n\r\n    // 첫 주 빈 칸\r\n    for (let i = 0; i < firstDayOfMonth.getDay(); i++) {\r\n      dates.push(null);\r\n    }\r\n\r\n    // 해당 월의 모든 날짜\r\n    for (let i = 1; i <= lastDayOfMonth.getDate(); i++) {\r\n      const date = new Date(currentMonth.getFullYear(), currentMonth.getMonth(), i);\r\n      dates.push(date);\r\n    }\r\n\r\n    return dates;\r\n  };\r\n\r\n  const handlePreviousMonth = () => {\r\n    setCurrentMonth(new Date(currentMonth.getFullYear(), currentMonth.getMonth() - 1, 1));\r\n  };\r\n\r\n  const handleNextMonth = () => {\r\n    setCurrentMonth(new Date(currentMonth.getFullYear(), currentMonth.getMonth() + 1, 1));\r\n  };\r\n\r\n  const getYearMonths = () => {\r\n    return Array.from({ length: 12 }, (_, index) => {\r\n      const monthDate = new Date(currentYear, index, 1);\r\n      return {\r\n        name: monthDate.toLocaleDateString('en-US', { month: 'short' }).toUpperCase(),\r\n        date: monthDate,\r\n      };\r\n    });\r\n  };\r\n\r\n  const isToday = (date) => {\r\n    // date가 유효한 경우에만 체크\r\n    return date && today.getFullYear() === date.getFullYear() &&\r\n      today.getMonth() === date.getMonth() &&\r\n      today.getDate() === date.getDate();\r\n  };\r\n\r\n  const weekDates = getWeekDates();\r\n  const monthDates = getMonthDates();\r\n  const yearMonths = getYearMonths();\r\n\r\n  const handlePreviousYear = () => {\r\n    setCurrentYear((prevYear) => prevYear - 1);\r\n  };\r\n\r\n  const handleNextYear = () => {\r\n    setCurrentYear((prevYear) => prevYear + 1);\r\n  };\r\n\r\n  const isTaskInMonth = (monthDate, task) => {\r\n    const monthStart = new Date(monthDate.getFullYear(), monthDate.getMonth(), 1);\r\n    const monthEnd = new Date(monthDate.getFullYear(), monthDate.getMonth() + 1, 0);\r\n    return task.start <= monthEnd && task.end >= monthStart;\r\n  };\r\n\r\n  const isTodayInMonth = (monthDate) => {\r\n    return (\r\n      today.getFullYear() === monthDate.getFullYear() &&\r\n      today.getMonth() === monthDate.getMonth()\r\n    );\r\n  };\r\n\r\n  const isTaskOnDate = (date, task) => {\r\n    return date >= task.start && date <= task.end;\r\n  };\r\n\r\n  const calculateProgressBarStyle = (task) => {\r\n    const weekStart = weekDates[0].date.getTime();\r\n    const weekEnd = weekDates[6].date.getTime() + 24 * 60 * 60 * 1000 - 1;\r\n\r\n    const taskStart = Math.max(task.start.getTime(), weekStart);\r\n    const taskEnd = Math.min(task.end.getTime() + 24 * 60 * 60 * 1000 - 1, weekEnd);\r\n\r\n    if (taskEnd < weekStart || taskStart > weekEnd) {\r\n      return { display: 'none' };\r\n    }\r\n\r\n    const totalWeekMs = weekEnd - weekStart + 1;\r\n    const offset = ((taskStart - weekStart) / totalWeekMs) * 100;\r\n    const width = ((taskEnd - taskStart) / totalWeekMs) * 100;\r\n\r\n    return {\r\n      left: `${offset}%`,\r\n      width: `${width}%`,\r\n    };\r\n  };\r\n\r\n  const ProgressBar = ({ task, progressBarStyle }) => {\r\n    return (\r\n      <div className=\"progress-bar\" style={progressBarStyle}>\r\n        <div\r\n          className=\"progress\"\r\n          style={{\r\n            width: `${task.progress}%`,\r\n            backgroundColor: task.color,\r\n          }}\r\n        >\r\n          <span className=\"task-name\">{task.name}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"gantt-chart\">\r\n      {project ? (\r\n        <>\r\n          <h2 className=\"project-title\">📌 {project.name}</h2>\r\n          <p>프로젝트 시작일: {project.startDate}</p>\r\n        </>\r\n      ) : (\r\n        <p>현재 선택된 프로젝트가 없습니다.</p>\r\n      )}\r\n\r\n<div className=\"task-container\">\r\n        {tasks.map((task) => (\r\n          <div key={task.id} className=\"task\">\r\n            <span className=\"task-name\">{task.name}</span>\r\n            <button onClick={() => fetchDependencies(task.id)}>🔗 의존성 보기</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* 추가: 작업 간 의존성 표시 */}\r\n      <div className=\"dependencies\">\r\n        <h3>작업 간 의존성</h3>\r\n        <ul>\r\n          {dependencies.map((dep) => (\r\n            <li key={dep.id}>\r\n              작업 {dep.task.id} → 종속 작업 {dep.dependentTask.id}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n      {viewMode === 'week' && (\r\n        <>\r\n          <div className=\"calendar\">\r\n            {weekDates.map((day, index) => (\r\n              <div key={index} className={`calendar-day ${isToday(day.date) ? 'today' : ''}`}>\r\n                <div className=\"day-name\">{day.day}\r\n                  <div className=\"day-date\">\r\n                    {day.date.toLocaleDateString('en-US', { day: 'numeric', month: 'short' })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"task-container\">\r\n            {tasks.map((task) => {\r\n              const progressBarStyle = calculateProgressBarStyle(task);\r\n              return (\r\n                <div key={task.id} className=\"task\">\r\n                  <ProgressBar task={task} progressBarStyle={progressBarStyle} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </>\r\n      )}\r\n      {viewMode === 'month' && (\r\n        <div className=\"month-calendar\">\r\n          <div className=\"month-header\">\r\n            <button className=\"month-nav\" onClick={handlePreviousMonth}>\r\n              &lt;\r\n            </button>\r\n            <div className=\"month-title\">\r\n              {currentMonth.toLocaleDateString('en-US', { month: 'long', year: 'numeric' })}\r\n            </div>\r\n            <button className=\"month-nav\" onClick={handleNextMonth}>\r\n              &gt;\r\n            </button>\r\n          </div>\r\n          <div className=\"calendar-grid\">\r\n            {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map((day) => (\r\n              <div key={day} className=\"calendar-day-name\">\r\n                {day}\r\n              </div>\r\n            ))}\r\n            {monthDates.map((date, index) => (\r\n              <div key={index} className={`calendar-day ${date && isToday(date) ? 'today' : ''}`}>\r\n                {date && (\r\n                  <>\r\n                    <div className=\"day-date\">{date.getDate()}</div>\r\n                    <div className=\"task-indicator-container\">\r\n                      {tasks.map(\r\n                        (task) =>\r\n                          isTaskOnDate(date, task) && (\r\n                            <div key={task.id} className=\"task-indicator task-bar\" // 막대 모양\r\n                              style={{ backgroundColor: task.color }}></div>\r\n                          )\r\n                      )}\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {viewMode === 'year' && (\r\n        <div className=\"year-calendar\">\r\n          <div className=\"year-header\">\r\n            <button className=\"year-nav\" onClick={handlePreviousYear}>\r\n              &lt;\r\n            </button>\r\n            <div className=\"year-title\">{currentYear}</div>\r\n            <button className=\"year-nav\" onClick={handleNextYear}>\r\n              &gt;\r\n            </button>\r\n          </div>\r\n          <div className=\"year-grid\">\r\n            {yearMonths.map((month, index) => (\r\n              <div key={index} className=\"year-month\">\r\n                <div className={`month-name ${isTodayInMonth(month.date) ? 'today' : ''}`}>\r\n                  {month.name}\r\n                </div>\r\n                <div className=\"month-tasks\">\r\n                  {tasks.map(\r\n                    (task) =>\r\n                      isTaskInMonth(month.date, task) && (\r\n                        <div\r\n                          key={task.id}\r\n                          className=\"task-indicator task-circle\"\r\n                          style={{ backgroundColor: task.color }}\r\n                        ></div>\r\n                      )\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"view-mode-buttons\">\r\n        <button\r\n          className={`view-button ${viewMode === 'week' ? 'active' : ''}`}\r\n          onClick={() => setViewMode('week')}\r\n        >\r\n          Week\r\n        </button>\r\n        <button\r\n          className={`view-button ${viewMode === 'month' ? 'active' : ''}`}\r\n          onClick={() => setViewMode('month')}\r\n        >\r\n          Month\r\n        </button>\r\n        <button\r\n          className={`view-button ${viewMode === 'year' ? 'active' : ''}`}\r\n          onClick={() => setViewMode('year')}\r\n        >\r\n          Year\r\n        </button>\r\n      </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nexport default GanttChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}